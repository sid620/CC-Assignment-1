     1	COMMANDS
     2	--------
     3	
     4	Terminology:
     5	
     6	+ MUCK additon
     7	* Wizard only
     8	# Restricted with GOD_PRIV
     9	B Builder command -- may be restricted
    10	P Programmer command  -- restricted unless MUCKER_ALL
    11	~ Optional
    12	% Special
    13	
    14	@ACTION		[+B]
    15	@action <name>=<source>.  Creates a new action and attaches it  to the
    16	thing, room, or  player specified.  You  may only  attach  actions you
    17	control to things you control.  Creating an action costs 1 penny.  The
    18	action can then be linked with the command @LINK.
    19	
    20	@ATTACH		[+B]
    21	@attach <action>=<new  source>.  Removes the action from  where it was
    22	and attaches it to the  new source.  You  must control  the action  in
    23	question.
    24	
    25	@BOOT		[*]
    26	@boot <player>.  Disconnects  a player from  the game.  If a player is
    27	connected more than once it affects the most recent connection.
    28	
    29	@CHOWN		[%]
    30	@chown <object>  [=<player>].   Changes the ownership   of <object> to
    31	<player>, or if no player  is  given,  to yourself.   If  the MUCK  is
    32	compiled with PLAYER_CHOWN, all players are allowed to take possession
    33	of objects, rooms, and  actions,  provided the  CHOWN_OK flag is  set.
    34	Mortals cannot take ownership  of a room unless they  are standing  in
    35	it, and  may not  take ownership of  an object unless they are holding
    36	it.  Wizards have absolute power over all ownership.
    37	
    38	@CREATE		[B]
    39	@create  <object> [=<cost>].  Creates a  new object and  places it  in
    40	your  inventory.  This costs at   least ten pennies.     If <cost>  is
    41	specified, you are  charged  that   many pennies,  and in return,  the
    42	object is endowed with a value according to the formula ((cost /  5) -
    43	1).  Usually the  maximum  value of an  object  is 100 pennies,  which
    44	would cost 505 pennies to create.
    45	
    46	@DESCRIBE
    47	@describe <object> [=<text>].   Sets the description field of <object>
    48	to  <text>.   If <text> is  not  specified,  the description  field is
    49	cleared.
    50	
    51	@DIG		[B]
    52	@dig <room> [=<parent>].  Creates a new room and  sets its parent.  If
    53	no  parent is given  it defaults to  the  global  environment which is
    54	typically room #0.  Digging a room costs  10 pennies,  and you must be
    55	able to link to the parent room if specified.
    56	
    57	@DROP		[+]
    58	@drop <object> [=<text>].  Sets the drop field  of <object> to <text>.
    59	If  <text>  is not specified,   the drop field is  cleared.   The drop
    60	message on an object is displayed when you drop it.  On an exit, it is
    61	displayed  upon  entering the  destination  room.  On  a player  it is
    62	displayed to whoever kills them.   On a room,  it is displayed when an
    63	object is dropped there.
    64	
    65	@DUMP		[*]
    66	@dump.  Saves the database to disk.  This  is done automatically every
    67	hour or so, and after an @shutdown.
    68	
    69	@EDIT		[+P]
    70	@edit <program>.  Searches for a program and if a match is found, puts
    71	the player into edit mode.  Programs must be created with @PROG.
    72	
    73	@FAIL
    74	@fail <object> [=<text>].  Sets the fail field  of <object> to <text>.
    75	If <text> is not specified, the fail field is cleared.
    76	
    77	@FIND
    78	@find [<string>].   Searches through  the  entire database for  rooms,
    79	things, players, and programs  you  control, optionally matching their
    80	names to <string>  if given.  This usually costs  at least a penny due
    81	to the computing power involved.
    82	
    83	@FORCE		[*#]
    84	@force <player>=<command>.  Causes the game to process <command> as if
    85	typed  by <player>.  With  the compile option  GOD_PRIV, God cannot be
    86	forced by his/her sub-wizards.
    87	
    88	@LINK
    89	@link  <object1>=<object2> [;  <object3>; ...  <objectn>   ].    Links
    90	<object1> to <object2>, provided  you control <object1>, and <object2>
    91	is either  controlled by you or linkable.   Actions  may be  linked to
    92	more than one thing, specified in a list separated by semi-colons.
    93	
    94	@LIST
    95	@list <program>  [=[line1] [-] [line2]].  Lists  lines  in a  program,
    96	provided you control it or  it is LINK_OK.   Zero, one,  or  two  line
    97	numbers may be specified, denoting the range of lines to list.   If no
    98	lines are given, the entire program is listed.
    99	 
   100	@LOCK
   101	@lock <object>=<key>.  Sets the key for <object>  to that specified by
   102	<key>.  <key> is a full boolean expression, which  may  contain any of
   103	the characters: ! | & ( ).
   104	
   105	@NAME
   106	@name  <object>=<name> [<password>].  Sets  the name field of <object>
   107	to  <name>.   <name>  cannot   be  empty; a null   name   is  illegal.
   108	<password> must  be supplied to rename a   player.  Wizards can rename
   109	any player but still must include the password.
   110	
   111	@NEWPASSWORD	[*#]
   112	@newpassword <player>  [=<password>].   Sets   the  password field  of
   113	<player> to <password>.  If <password> is not specified,  the password
   114	field is    cleared.  A   player with    no  password   cannot  rename
   115	him/herself.  If  GOD_PRIV  was defined,   nobody can   change   God's
   116	password.
   117	
   118	@ODROP		[+]
   119	@odrop  <object>  [=<text>].   Sets the odrop field   of  <object>  to
   120	<text>.  If <text>   is not specified,  the odrop  field  is  cleared.
   121	Odrop on an  object is displayed  prefixed  by the player's  name when
   122	s/he drops that object.  On an exit, it  is displayed upon  a player's
   123	arrival to  the destination room  (or the location  of the destination
   124	player).  On a player, it is displayed after the `name killed victim!'
   125	message.  On a room, it is displayed when an  object is dropped there,
   126	prefixed by the object's name.
   127	
   128	@OFAIL
   129	@ofail  <object>  [=<text>].    Sets the  ofail  field  of <object> to
   130	<text>.  If <text> is not specified, the ofail field is cleared.
   131	
   132	@OPEN		[B]
   133	@open <exit> [=<object> [; <object2>; ... <objectn> ]].  Opens an exit
   134	in the current room, optionally attempting to link  it simultaneously.
   135	Opening an exit costs a penny, and an extra penny  to link it, and you
   136	must control the room where it is being opened.
   137	
   138	@OSUCCESS
   139	@osucc <object>  [=<text>].   Sets  the osuccess field  of <object> to
   140	<text>.  If <text> is not specified, the osuccess field is cleared.
   141	
   142	@OWNED
   143	@owned [<player>].  Lists everything you own, or Wizards may specify a
   144	player argument.  This list includes exits, unlike @FIND.
   145	
   146	@PASSWORD
   147	@password <old>=<new>.  Change your password.
   148	
   149	@PCREATE	[*#~]
   150	@pcreate  <player>=<password>.  This  command is only   used under the
   151	compile option REGISTRATION.  Create a new player named  <player> with
   152	<password>.
   153	
   154	@PROG		[+P]
   155	@prog  <program>.  Create  a   new program, or enter  edit  mode on an
   156	existing one.  See @EDIT and Programmer's Reference.
   157	
   158	@RECYCLE	[+~]
   159	@recycle <object>.  Destroy an object and remove  all references to it
   160	within the  database.  The object  is then added  to a free  list, and
   161	newly created objects  are assigned from  the pool of recycled objects
   162	first.   You *must*  own the object being  recycled, even wizards must
   163	use the @chown command to recycle someone else's belongings.
   164	
   165	@SET
   166	@set <object> = [!] <flag> -or-
   167	@set <object> = <property> : [ <string> ] -or-
   168	@set <object> = :
   169	@set does one of  three things on TinyMUCK,  it  can modify flags, add
   170	properties to an object,  or remove properties  from an object.
   171	Using the first format, you may set flags, which are: WIZARD,
   172		LINK_OK, DARK [DEBUG], FILTER, STICKY [SETUID], or JUMP_OK.
   173		Optional flags which may or may not be on a given site are:
   174		BUILDER, CHOWN_OK, HAVEN, ABODE, or MUCKER.
   175	The second format sets <property> on <object> to <string>, or if <string>
   176		is not given, removes <property>.
   177	The third format removes all properties from an object.
   178	
   179	@SHUTDOWN	[*]
   180	@shutdown.  Dumps the database and shuts the game down.
   181	
   182	@STATS
   183	@stats [<player>].  For mortal  players, returns the highest number in
   184	the  database, which includes  garbage that  has been  generated  with
   185	@recycle.  For Wizards, gives  this  number as well  as a breakdown of
   186	each type of   object:  rooms, exits,  things,  programs, players, and
   187	garbage.  Wizards may  also specify <player>  which returns  a similar
   188	display limited to the possessions of <player>.
   189	
   190	@SUCCESS
   191	@succ <object> [=<text>].   Sets  the  success field  of  <object>  to
   192	<text>.  If <text> is not specified, the success field is cleared.
   193	
   194	@TELEPORT
   195	@teleport <arg1> [=<destination>].  Moves  <arg1> to <destination>, if
   196	<destination> is not given, moves you to <arg1>.  Wizards may teleport
   197	anything to anywhere, provided it makes sense, and mortals are allowed
   198	to  do two things: teleport  rooms to change  their parent fields, and
   199	the  may  teleport  things to a room  they can link  to, provided they
   200	control either the thing or its location.
   201	
   202	@TOAD		[*]
   203	@toad <player>.  Turns <player> into a slimy  toad, destroying his/her
   204	character and disconnecting him/her from the game.
   205	
   206	@TRACE		[+]
   207	@trace  <object> [=<depth>].   Starts  with  <object>  and  traces all
   208	location  fields, until the global-environment  room is reached or the
   209	optional <depth> is specified.  This  is generally  useful for finding
   210	which rooms are  parents in  your heirarchy.   If you cannot link to a
   211	particular location its name is replaced by stars ***.
   212	
   213	@UNLINK		[B]
   214	@unlink  <action>.  Removes  any  and  all destination fields  of  the
   215	specified <action>.
   216	
   217	@UNLOCK
   218	@unlock  <object>.   Removes  any and   all   locks  on the  specified
   219	<object>.
   220	
   221	@WALL		[*]
   222	@wall <message>.  Shouts a message to every player in the game.
   223	
   224	DROP
   225	drop  <object>.  Drops the <object>  if you are holding it.   It moves
   226	the object to the room you are in, unless  its STICKY flag  is set, or
   227	the room has a drop-to.  Programs are  much  like  objects but are not
   228	affected by room droptos or STICKY flags.
   229	
   230	EXAMINE examine <object>.    If you  control  <object>,  a    complete
   231	breakdown of all fields, flags, properties, etc.  associated  with the
   232	object is displayed.  Program-executing fields  are displayed as their
   233	true text, rather than executing the program in  question.   If you do
   234	not control <object>, however, it  prints the owner of  the  object in
   235	question, and, again, displays the true text of the description.
   236	
   237	GET
   238	get <object>.  Attempts to pick up <object>.  The lock on  <object> is
   239	checked for a success  (true), and  the normal path of success/fail is
   240	then taken.  On success the object is placed in your inventory.
   241	
   242	GIVE
   243	give   <player|object>=<amount>.   Gives <amount>  pennies  from  your
   244	supply to <player>.  Mortals may  only give  positive amounts and  may
   245	not  cause a player  to have more than 10000  pennies.  Wizards do not
   246	affect  their penny supplies  by giving  to  others, and may also give
   247	pennies to objects, changing that object's value.
   248	
   249	GOTO
   250	goto <direction>.  Attempts  to find an  exit by  that  name.  Goto is
   251	unnecessary and much like LET in Basic (read: silly).
   252	
   253	GRIPE
   254	gripe <message>.  Sends <message> to the system maintainer.
   255	
   256	HELP
   257	help.  Displays the help file.
   258	
   259	INVENTORY
   260	inventory.  Lists the objects you  are carrying,  as  well as how many
   261	pennies you have.
   262	
   263	KILL
   264	kill  <player> [=<cost>].  A  successful  kill  sends the player home,
   265	sends all objects in the player's inventory to their respective homes.
   266	The probability of killing the player is <cost> percent.  Spending 100
   267	pennies always  works  except against   Wizards who  cannot be killed.
   268	Players cannot be killed in rooms which have the HAVEN flag set.
   269	
   270	LOOK
   271	look <object>.  Looks around  at the  current room, or at  <object> if
   272	specified.  For players, displays their description and inventory, for
   273	things,  their description,  and for  rooms,  their name, description,
   274	succ/fail message,  and contents.  Also triggers osucc/ofail  messages
   275	on  rooms.   Programs   are triggered   accordingly on  desc/succ/fail
   276	fields.
   277	
   278	MOVE
   279	move <direction>.  See GOTO.
   280	
   281	MAN		[+]
   282	man.  Displays the programmer's manual or a quick reference.
   283	
   284	NEWS
   285	news.  Displays the game's news file.
   286	
   287	OUTPUTPREFIX
   288	OUTPUTPREFIX [string]. Must  be in all capitals, and  must be typed in
   289	full.   This  prints  the  given string  before  the output  of  every
   290	command.
   291	
   292	OUTPUTSUFFIX [string].  Must be in all capitals, and must be  typed in
   293	full.  This prints the given string after the output of every command.
   294	
   295	PAGE
   296	page <player> [=<message>].  Costs a  penny,  and sends  your name and
   297	location to <player>, optionally  passing them <message> as  well.   A
   298	player who is set HAVEN cannot be paged, and will not be notified that
   299	you tried.
   300	
   301	POSE or :
   302	:<text>.  Displays your name, followed by <text>.
   303	
   304	PUT
   305	put <object>.  See DROP.
   306	
   307	QUIT
   308	QUIT.  Logs you off the game.  Must be typed all capitals.
   309	
   310	READ
   311	read [<object>].  Synonym for LOOK.
   312	
   313	ROB
   314	rob <player>.  Attempts to steal a penny from <player>.   The  lock on
   315	<player> is checked, and  you succeed or  fail appropriately.   If you
   316	succeed, the message `You stole a penny.' is always displayed.
   317	
   318	SAY or "
   319	"<text>.  Displays the message, <player> says, "<text>".
   320	
   321	SCORE
   322	score.  Displays how many pennies you have.
   323	
   324	TAKE
   325	take <object>.  Synonym for GET.
   326	
   327	THROW
   328	throw <object>.  Synonym for DROP.
   329	
   330	WHISPER
   331	whisper <player>=<message>.   Gives  <player>    a   private  message,
   332	undetectable by others in the same room.
   333	
   334	WHO
   335	WHO [<match>]. List  names of the players  logged in, and  their  idle
   336	times.   If  <match> is specified, only names  that start with <match>
   337	are displayed.  Must be typed in all capitals.
