     1	Your CONFIG.SYS and AUTOEXEC.BAT by Barry Simon
     2	
     3	                 Copyright (c) 1986, by Barry Simon
     4	Written expressly for and posted on Compuserve's IBM Forum.  May only be 
     5	reproduced commercially with the author's permission.  May only be 
     6	distributed with this copyright notice intact.
     7	
     8	Introduction
     9	
    10	During the startup of an IBM or IBM compatible computer, the operating system 
    11	looks for two files of user supplied commands which allow you to customize 
    12	your system in various ways.  This article will attempt to explain some of 
    13	the options available to you when you make these basic files.  While I have 
    14	written it for the relative novice, I hope it may provide some useful new 
    15	tricks even to the more experienced user.
    16	
    17	These two files whose names must be CONFIG.SYS and AUTOEXEC.BAT should reside 
    18	in the root directory of your boot diskette or of your hard disk if you have 
    19	a bootable hard disk (i.e. if you can start your system from your hard disk 
    20	without placing a diskette in drive A).  Actually, there is a method for 
    21	placing the AUTOEXEC.BAT file in a subdirectory but despite the fact that 
    22	I tend to be fanatical about keeping my root directory lean, I don't
    23	recommend using this option.
    24	
    25	When you turn on your computer, the CPU is setup to begin a program in the 
    26	ROM (read only memory) that all IBM compatible machines have.  This ROM is 
    27	distinct from and in addition to the working RAM (random access memory).  
    28	When you are sold a machine with 256K of memory, that figure refers to the 
    29	RAM.  There is an additional 16K-32K of ROM.  RAM is cleared whenever you 
    30	turn off your machine or reboot while the ROM is permanently burned in and
    31	should not change.
    32	
    33	Booting Up
    34	
    35	The program that is automatically run from ROM begins with a brief test 
    36	(POST="power on self test") of various components of your computer.  If you 
    37	have an XT or AT, the most noticeable part is the memory(RAM) test accompanied 
    38	by counting up the memory on your screen as the test progresses.  This test 
    39	is skipped when you do a warm reboot by hitting Ctrl-Alt-Del.  You may also 
    40	notice your drives and printer "burping" as they get tested.
    41	
    42	After this test, the machine searches for various "ROM extensions" that is 
    43	additional ROM that can come with a hard disk or EGA card for example.  The 
    44	program then searches first drive A and then a hard disk if you have a 
    45	bootable hard disk for a diskette or disk program to transfer control to.  It 
    46	transfers control to the very first sector on the disk which is called the 
    47	boot sector.  When you format a diskette, a little program is placed in the 
    48	boot sector which will display the message "non system disk, replace and hit 
    49	any key".  When you transfer the operating system to the disk with the SYS 
    50	command or via FORMAT/S, this boot sector program is changed to transfer 
    51	control to a program which must be in the position immediately following the 
    52	boot sector.
    53	
    54	If the disk has the system on it, control is transferred successively to two 
    55	hidden files which load the BIOS ("basic input/output system" part of which 
    56	is in ROM) and the DOS ("Disk operating system").  When most users think of 
    57	DOS they think of the familiar prompt and copy,.... commands.  These parts of 
    58	the DOS are only loaded later; the part in the hidden file involves services 
    59	provided by DOS to programmers rather than directly to users.  The two hidden 
    60	files are called "IBMBIOS.COM" and "IBMDOS.COM" in PC-DOS and may have 
    61	different names on other computers although surprisingly, the names persist 
    62	even on some non-IBM brands!
    63	
    64	Parenthetically, I want to note that there isn't really much hidden about 
    65	hidden files.  As you may know, the DIRectory you are used to display gets 
    66	its information from a special file also called the directory.  This file 
    67	is essentially a little database with information about each file including 
    68	the filename, extension, date and time of creation.  One byte in the record 
    69	for each file is called the attribute byte and contains eight "switches" to 
    70	keep track of things like whether the file is a volume label, read only, etc.  
    71	One of these switches is whether the file is "hidden".  To anyone with any 
    72	programming experience or with any of a large number of public domain or 
    73	commercial programs, these files are not in any sense hidden.  The basic DOS
    74	services like DIR and COPY are specially set up to ignore hidden files and 
    75	that is the only sense in which these files are hidden.  The two system files 
    76	are hidden because their location is critical for a successful boot-up and 
    77	they are less likely to be moved by accident if they are hidden.
    78	
    79	After the second hidden file is mainly loaded, it looks for a special file 
    80	called "CONFIG.SYS" and processes the commands in it.  Then control is passed 
    81	to the third file in the operating system, COMMAND.COM.  As the final step in 
    82	booting up, COMMAND.COM looks for a file named AUTOEXEC.BAT and, if found, 
    83	it loads it and runs it.  If not found, COMMAND.COM exits with the DATE and 
    84	TIME commands.
    85	
    86	Except for its special status as a bootup file, the AUTOEXEC.BAT file is an 
    87	ordinary BATch file with the usual rules of syntax.  The CONFIG.SYS file has 
    88	a special syntax with a limited number of allowed commands.  Both must be 
    89	pure ASCII files, that is without any special formatting codes that some word 
    90	processors add.  Many word processors which have special codes have a 
    91	"non-document" mode for preparing ASCII files.  These files have separate 
    92	lines which must be ended with carriage return/line feed pairs.  If you have 
    93	any doubts about whether the file is "pure ASCII" you can use the TYPE 
    94	command to display it on the screen and see if it just has ordinary letters 
    95	and numbers.
    96	
    97	What goes in your root directory
    98	
    99	When a subdirectory fills up, it adds another cluster of disk space to 
   100	increase its size but the size of the root directory is fixed at the time 
   101	the diskette or disk is formatted.  It is not merely because of the size 
   102	restriction  that I recommend that you keep your root directory slight.  
   103	Since the files in the root are likely to be of diverse type, it will be 
   104	difficult to keep track of things if you put too much there.  I mainly put 
   105	subdirectories there and mainly subdirectories which have no files but only
   106	subsubdirectories.  For example, I have a WORDS subdirectory with my word 
   107	processor, outliner, thesaurus, etc in subsubdirectories.  Generally, there 
   108	are only three files that I recommend go into the root: COMMAND.COM, 
   109	CONFIG.SYS and AUTOEXEC.BAT.  As I mentioned, one can put AUTOEXEC.BAT 
   110	elsewhere and even COMMAND.COM but I feel that is carrying things too far.  
   111	In fact, I even have a startup.bat file of the type I'll describe there but 
   112	the point is to keep that directory thin and to complain bitterly about
   113	software so inconsiderate that it forces you to place it in the root 
   114	directory.  My point in mentioning this here is that I'm about to discuss 
   115	device drivers which many people put in the root directory.  If you like to 
   116	be organized, I recommend you make a directory for device drivers (mine is 
   117	called \BIN\DEVICES).  Another option is to put the drivers in different 
   118	directories with each driver in with related files so, for example, the 
   119	drivers that come with DOS are kept in the same directory as the other DOS
   120	programs or the mouse driver is with the other mouse software.
   121	
   122	Device drivers
   123	
   124	There are a group of programs which are made permanently resident and which 
   125	are loaded as part of the CONFIG.SYS.  Virtually any resident program can 
   126	be produced in this format but certain ones must be of this form.  Typically, 
   127	console drivers and any program which controls "a device" must be loaded now.  
   128	Most virtual disks and print spoolers also are loaded as device drivers.  
   129	While device drivers are programs, they need not have the extension "com" or 
   130	"exe".  In fact, so far as I can tell their extension can be anything you 
   131	wish.  Nevertheless virtually all commercially available device drivers have 
   132	the extension "sys".  Some drivers are available with the extension "dev".  
   133	The syntax for loading a device driver in your CONFIG.SYS is:
   134	
   135	  device=<path><name><parameters>
   136	
   137	so if you have a device foo.sys in the directory \bin\devices of drive C: and 
   138	it will take a numeric parameter to set the size of some buffer, you might 
   139	load it with:
   140	
   141	  device=C:\bin\devices\foo.sys 128
   142	
   143	Note that it is essential to include the extension "sys" or else you will get 
   144	an error message "bad or missing foo".  The drive letter C: is not required 
   145	but it can't hurt and I know of one person who claimed the device driver on 
   146	her machine couldn't be found without it.  The question of which parameters 
   147	a given device driver allows or whether it allows any at all depends on the
   148	driver and should be dealt with in the documentation for the program in 
   149	question.  For the drivers ANSI.SYS and VDISK.SYS which come with DOS, I note 
   150	that the former takes no parameters while the latter takes parameters 
   151	explained in the DOS manual.  DOS 3.2 comes with a third driver called 
   152	DRIVER.SYS while some versions of MSDOS 3.2 comes with an alternate ram disk 
   153	called RAMDRIVE.SYS.  Both take parameters.
   154	
   155	Examples of Device Drivers: the default drivers
   156	
   157	I will not attempt to describe all available device drivers since there are 
   158	so many.  For example, Chris Dunford, one of the sysops of Compuserve has 
   159	written public domain programs which installs "devices" to control screen 
   160	blanking (BURNDEV) and another allowing you to send control sequences easily 
   161	to your speaker (SPKR).  These represent examples where a real "device" is
   162	installed.  A device is a virtual file which can typically be written too 
   163	and read from.  The most common example is "con" which you typically read 
   164	from when you issue the command "copy con filename".  Devices can only be 
   165	installed via the CONFIG.SYS.  Despite the name, the device command can load 
   166	other programs which do not control devices and physical "devices" may not be 
   167	devices in the sense of setting up a virtual file.  A mouse is a good example 
   168	of something which is not a device in this technical sense.
   169	
   170	The hidden file IBMDOS sets up several devices even if you have no CONFIG.SYS: 
   171	con, prn, aux, lpt1, lpt2, lpt3, com1, com2.  Con (short for console) is a 
   172	combined keyboard/monitor device, prn for printer is by default a name for 
   173	lpt1 and aux a name for com1.  The DOS mode command allows reassignment of 
   174	these devices.  LPTn and COMn are names for the parallel and serial ports on 
   175	the computer.  These device names are assigned even if you don't have the 
   176	full complement of ports.
   177	
   178	Examples of Device Drivers:Console Drivers
   179	
   180	The most common device driver to install is a console driver which replaces 
   181	the default console driver.  Some of these replacements attempt to address 
   182	the notoriously slow display speed of the monitors and/or the annoying 
   183	flicker on the color graphics display.  In addition, some of the escape 
   184	sequences of the 1977 console standard of the American National Standards 
   185	Institute (ANSI) are implemented.  These sequences include ways of controlling 
   186	colors, cursor position and some DOS level keyboard macros.  (They are 
   187	described in my article ANSI.ART).  One console driver of this type called 
   188	ANSI.SYS is supplied with DOS and takes about 2K of resident memory.  It does 
   189	not address the speed of display issue but it does implement several ANSI 
   190	escape sequences.  There are numerous programs which assume the ANSI.SYS is 
   191	installed to operate properly (as well as a few that don't work properly if 
   192	ANSI.SYS is installed!) so it is wise to install ANSI or an equivalent driver 
   193	even if you do not want to use its features yourself.  Actually, it is not 
   194	hard to use the driver at the DOS level to set colors, set up a fancy prompt 
   195	or redefine keys.
   196	
   197	There are several alternatives available to ANSI.SYS which you might want to 
   198	consider.  NANSI.SYS is a public domain program which speeds up scrolling 
   199	(when combined with RAW mode by a factor of about 2) and provides some 
   200	additional ANSI escape commands at a cost of only 3K of RAM.  FANSI CONSOLE 
   201	and TALL SCREEN are two commercial programs (listing for $75 and $49 
   202	respectively) taking much more memory (around 60K with a reasonable amount 
   203	of screen save memory) providing many more services: faster scrolling 
   204	(FANSI only), screen blanking (FANSI only), DOS command line editing and
   205	recall (TALL SCREEN ONLY), screen memory and keyboard enhancements as well 
   206	as additional features.  While it is most natural to control scrolling by a 
   207	device driver, there is at least one commercial com program which takes over 
   208	the console by a different method and speeds up scrolling my a factor of six or
   209	more (FLICKER FREE).  I am quite happy with FANSI but I have friends whose 
   210	computer taste I trust using both NANSI and TALL SCREEN so the choice is not 
   211	clear.  And FLICKER FREE is an intriguing program whose second release (which 
   212	will support the EGA) I eagerly await.
   213	
   214	Examples of Device Drivers:Other drivers
   215	
   216	If you have a Lotus/Intel/Microsoft EMS board or AST EEMS board, you will 
   217	need to load a device driver to access this extended memory.  Often the 
   218	command will require various parameters to specify the amount of memory being 
   219	set aside and various items like the region of conventional memory used for 
   220	swapping and the port number to use.  Be warned if you are setting up a 
   221	CONFIG.SYS file for the first time that you may already have a CONFIG.SYS
   222	file which was made for you when you installed the EMS software that came 
   223	with your board.  Since this likely has the correct parameters, you should 
   224	make your own CONFIG.SYS file by starting with this one and continuing from 
   225	there.  It is possible that you will need to load the EMS driver before 
   226	anything else.   I can report that if I try to load FANSI-CONSOLE on my AT 
   227	before the EMS driver that Intel supplies with my Above Board AT, the EMS 
   228	driver refuses to load and gives me the error message that my machine is
   229	"not a close enough AT compatible"!  Also be warned that while there is an 
   230	EMS "standard", this refers to the way EMS works once the driver that comes 
   231	with your board is installed.  More likely than not, drivers from different 
   232	companies are incompatible and if you need a second EMS board, it will have 
   233	to come from the company that supplied your first (this warning does not 
   234	apply to extended memory on the AT but only to expanded EMS memory).
   235	
   236	Some older hard disks are not self booting and require a device driver loaded 
   237	in your CONFIG.SYS but that is not so common any more.  DOS 3.2 has a program 
   238	called DRIVER.SYS which is a device driver to initialize external 3.5 inch 
   239	drives if you have one on an XT or AT.  By far the most common drive device 
   240	driver is to operate a RAM disk, that is a segment of RAM set aside as a fast
   241	virtual disk.  There are com files loaded after the CONFIG.SYS which set up 
   242	such drives but generally it is more sensible to use a device driver for this.  
   243	DOS 3.x comes with a program VDISK.SYS to set up a RAM disk.  This disk can 
   244	operate in conventional or AT extended memory.  It will not set up a RAM disk 
   245	in EMS memory but most EMS boards come with device drivers to set up RAM disks 
   246	in EMS.  In addition Microsoft WINDOWS comes with a RAM disk device driver 
   247	(which can be run independently of WINDOWS) and which can be set up in 
   248	conventional, AT extended or EMS memory.  Given Microsoft's experience and the 
   249	care they have lavished on WINDOWS, I'd recommend using the WINDOWS RAM disk 
   250	driver if you have it in preference to alternatives and, in particular to 
   251	VDISK which also comes from Microsoft.  However, if you are loading other 
   252	programs that use AT extended memory, you may want to stick with VDISK
   253	because the specification that IBM uses to access AT extended memory is 
   254	published while that of Microsoft is not and so other programs may clobber 
   255	the Window's RAM DISK driver.  If you want to set up more than one RAM disk, 
   256	you can include more than one line loading a RAM disk driver in your 
   257	CONFIG.SYS file.  You can normally load the same driver twice or use different 
   258	driver if you prefer.  Be warned that there is typically a few K overhead in
   259	conventional memory to load a RAM disk and you will pay this overhead more 
   260	than once if you load more than one RAM disk.
   261	
   262	Print spoolers set aside some memory to receive printer output and then send 
   263	that output to your printer as a background process.  I regard them as a 
   264	tremendous productivity tool.  While there exist print spoolers loading as com 
   265	files, many are loaded as device drivers.
   266	
   267	The Microsoft Mouse requires software to install it so your system will 
   268	recognize the mouse.  The mouse comes with two versions of this software: 
   269	MOUSE.SYS which is loaded as a device driver in your CONFIG.SYS and MOUSE.COM 
   270	which is loaded later, typically in your AUTOEXEC.BAT.  I do not believe 
   271	there is any particular reason to prefer one over the other.  Microsoft 
   272	recommends using the device driver on all systems but the 3270 machines.  If 
   273	you are using Software Carousel, you'll want to use the com file in various 
   274	partitions rather than the device driver.
   275	
   276	As you may know you can place remarks in your BATch files and in particular 
   277	in your AUTOEXEC.BAT.  This is useful if you want to temporarily run your 
   278	system without some resident program that is usually loaded in your 
   279	AUTOEXEC.BAT file.  You need only "remark it out", i.e. add the phrase "REM" 
   280	at the beginning of the line including it.  Technically, remarks are not 
   281	allowed in CONFIG.SYS files.  If you insert the word "REM" at the start of a 
   282	line in your CONFIG.SYS file you will get the message:
   283	
   284	   Unrecognized command in CONFIG.SYS
   285	
   286	However, since the rest of the line is not acted on, this procedure will have 
   287	the desired effect of "commenting out" the line in question so you should not 
   288	hesitate to use it.
   289	
   290	ECHO also doesn't work in CONFIG.SYS so there is no direct way of placing 
   291	messages on the screen during the loading of the CONFIG.SYS  However, there 
   292	is a public domain program called COMMENT.SYS which allows you to echo 
   293	comments to the screen via:
   294	
   295	   device=path\comment.sys <message>
   296	
   297	There is no stay resident part of comment.sys so you don't waste memory, only 
   298	time, by using it.  If you are a color freak, you can first load an ANSI 
   299	compatible console driver and then use COMMENT.SYS to send color setting 
   300	escape sequences to the screen and so see most of your bootup in living color!
   301	
   302	The FILES command
   303	
   304	DOS is a prisoner of its past.  Original IBM PC's came with only 16K of 
   305	memory (!) so when DOS boots up it sets aside memory for various purposes in 
   306	an incredibly frugal manner.  The defaults for three regions of memory set 
   307	aside for file handles, disk buffers and environment are woefully inadequate.  
   308	If you know what you are doing, it is easy to change these defaults but it's
   309	unfortunate that the novice gets stuck with these small values.  In any event, 
   310	FILES and BUFFER commands are among the most important for you to include in 
   311	your CONFIG.SYS.  When DOS opens a file, it keeps certain information in 
   312	memory to be able to quickly access the file.  This information is called a 
   313	file handle.  During bootup, memory is put aside for these file handles so a
   314	limit is placed on the number of files that can be open at one time.  The 
   315	default is eight which may seem adequate since programs normally close files 
   316	when they are done allowing the file handles to be reused.  However, eight is 
   317	often not adequate.  DOS uses four of the handles itself for "files" like con 
   318	and prn.  Thus there are four available for your programs.  Some resident
   319	programs leave files open and even the ones that don't, may need to open a 
   320	file for an initial access at the same time that an application program have 
   321	several files open.  Database programs often have separate index and data 
   322	files and typically may want to have more than four open files.  If DOS is 
   323	asked to open a file and a handle is not available, DOS issues an error 
   324	message and the running program may even abort.  I strongly recommend that 
   325	you place the line:
   326	
   327	   FILES=20
   328	
   329	in your CONFIG.SYS file.  Indeed since the cost of increasing files is less 
   330	than 40 bytes per handle, you could even use a number larger than 20.  For 
   331	most purposes 20 should suffice but ever since it wasn't enough for me in a 
   332	rather specialized situation, I've taken files=30 myself.
   333	
   334	BUFFERS
   335	
   336	You may have heard of disk caching.  As you've noticed, diskette access is 
   337	very slow and even a hard disk has access times 100 fold grater than RAM 
   338	access times.  Disk caching sets aside some RAM to keep a copy of the most 
   339	recently accessed disk information so, for example, if a database is 
   340	continually accessing a disk, the first time the disk is really read but the 
   341	next time the copy in cache memory will be read instead.  This is not the 
   342	place to discuss the pros and cons of commercial disk caching software but 
   343	you should know that DOS comes with some free rudimentary disk caching
   344	included.  It keeps N buffers of 512 bytes each with the copies of the last 
   345	N disk sectors accessed.  By default N is only two (three on the AT).  You 
   346	should certainly make this number larger by including the line:
   347	
   348	   BUFFERS=N
   349	
   350	in your CONFIG.SYS where recommended values of N are between 10 and 25.
   351	
   352	Let me tell you an anecdote to show how dramatic a difference this number can 
   353	make.  The first time that I ran my tape backup drive to backup my 30 meg 
   354	hard disk, I was bitterly disappointed.  Despite what I'd been told by the 
   355	salesman, it took over 45 minutes!  The next day, when I thought about it and 
   356	tried again, it took only 8 minutes!  What had happened?  The first time I 
   357	had been nervous about the effect my many resident programs might have so I 
   358	put an original write protected DOS disk in drive A and rebooted before 
   359	running the backup software.  This disk had no CONFIG.SYS so I was running 
   360	with the default three buffers.  The next day, I used my regular hard disk 
   361	boot with buffers=20 and that made the difference.  I have done some time 
   362	tests comparing something as simple as copying a directory from a hard disk 
   363	to a floppy and I've found that using extra buffers can decrease times by 30 
   364	or 40 percent.  So USE YOUR FREE DISK CACHING.
   365	
   366	The issue of precisely how many buffers to take is not an easy one.  
   367	Increasing the number of files handles has little effect on memory or 
   368	efficiency so you can freely take files=99 if the mood strikes you.  This is 
   369	not so with buffers.  Each buffer takes .5K of RAM so buffers add up.  
   370	Moreover at some point it will take DOS longer to check through all its 
   371	buffers looking to see if a file is there than it would take it to access it 
   372	directly.  I've seen the number 25 given as a dividing line but I would like 
   373	to do some tests to check this out.  I can only say that I've settled on
   374	buffers=20 myself and that with a floppy based system, you should take a 
   375	higher figure than you might with a hard disk.
   376	
   377	Increasing your environment
   378	
   379	DOS sets up a special section of memory called the environment which has a 
   380	default size of 160 bytes.  This area must hold your path, your prompt, the 
   381	place that COMMAND.COM can be found and various other strings.  Programs can 
   382	communicate with you by asking you to place information in the environment 
   383	with the SET command.  In addition you can keep global variables in the
   384	environment to pass between BATch files.  If you attempt to place more there 
   385	than it has room for you'll get a message "Out of environment space".  With 
   386	DOS 3.1 and later there is a CONFIG.SYS command allowing you to increase the 
   387	amount of space reserved for your environment.  There are known patches for 
   388	earlier versions DOS which are listed for example in my article on ANSI.SYS.  
   389	The procedure is documented in DOS 3.2 and so presumably it will be a 
   390	permanent feature of DOS.  It is undocumented in DOS 3.1.  The syntax is:
   391	
   392	   shell=C:\command.com /P /E:nnn
   393	
   394	where n is the number of bytes you want to set aside for the environment.  For 
   395	DOS 3.1 nnn represents the number of 16 byte paragraphs you want to set aside.  
   396	So for a 512 byte environment take nnn=32 in DOS 3.1 and 512 in DOS 3.2.  
   397	Obviously with a floppy based system, replace C: by A:
   398	
   399	How much space do you need for your environment?  That depends on your path, 
   400	applications and how fancy a prompt you make.  My advice is to do nothing 
   401	until you have a problem at which point you should remember that there is 
   402	something that you can do.
   403	
   404	For more advanced users, I note that the environment is not as benign as you 
   405	might think.  I know of several programs which crashed if there was too much 
   406	in the environment (most of the ones I know about have been fixed) and one 
   407	that crashed if the PATH was the last thing set in the environment.  I have 
   408	occasionally been baffled at what could be causing a conflict only to discover 
   409	the culprit was the environment.
   410	
   411	Miscellaneous CONFIG.SYS commands
   412	
   413	There are some other commands that can go in your CONFIG.SYS:
   414	
   415	-You can turn BREAK ON that is have the operating system check for control C 
   416	 more often than just during disk I/O.  This slows down certain processing 
   417	 but gives you more safety from certain kinds of dead ends.  The syntax is 
   418	 a line saying:
   419	
   420	      BREAK=ON
   421	
   422	 Unlike any other CONFIG.SYS command, this one can also be issued from the 
   423	 DOS command line or in your AUTOEXEC.BAT file.
   424	
   425	-In addition to file handles, DOS has something called file control blocks 
   426	 which in DOS 3.x can be changed by an FCBS command.  These are needed only 
   427	 if you have a LAN (local area network) and the parameters to take should be 
   428	 discussed by your LAN software.
   429	
   430	-DOS 3.2 has a STACK command.  From what I've read this is a real cludge and 
   431	 the manual seems to suggest that it was added at the last minute to solve a 
   432	 problem connected with a new way that DOS 3.2 treats the stack.  In any 
   433	 event, if you use DOS 3.2 and seem to have unexplained crashes, try adding:
   434	
   435	    STACK=20
   436	
   437	 to your CONFIG.SYS.
   438	
   439	-DOS 3.1 and later allows you to use the SUBST command to assign drive letters 
   440	 to directories.  In addition, with several RAM disks you may want to assign a 
   441	 letter beyond the default last drive of E.  DOS 3.x allows you to add a 
   442	 command:
   443	
   444	    LAST DRIVE =  ?
   445	
   446	 where ? is a letter and then you can assign any drive up to and including 
   447	 that letter.  Even a last drive=z only takes about 1K of RAM.
   448	
   449	-There is a COUNTRY command to control things like the time format.  The 
   450	 default is USA.
   451	
   452	One final remark about your CONFIG.SYS.  The order of the commands is 
   453	irrelevant except to the extent that certain device drivers like to be loaded 
   454	before others (and if you are loading two RAM disks of different sizes you 
   455	may care which is assigned which letter).  As with most DOS commands the 
   456	syntax is not case sensitive.
   457	
   458	As a review of what a CONFIG.SYS can contain, let me list the CONFIG.SYS from 
   459	one of my machines which is running DOS 3.2:
   460	
   461	   break=on
   462	   buffers=20
   463	   device=C:\bin\intel\emm.sys M3 I5 D
   464	   device=C:\bin\devices\fconbeta.dev /C=1/S=2000/H=0/V=0/R=200/L=1/W=1
   465	   device=C:\bin\devices\ramdrive.sys 1024 512 128 /A
   466	   device=C:\bin\devices\ramdrive.sys 1300 512 64 /E
   467	   device=C:\bin\devices\atqlpt1.sys 1644,1,3
   468	   device=C:\bin\devices\mouse.sys
   469	   files=30
   470	   lastdrive=z
   471	   shell=C:\command.com /P /E:512
   472	
   473	What should your AUTOEXEC.BAT contain?
   474	
   475	Most of my AUTOEXEC.BAT file loads my own particular blend of resident 
   476	programs.  This is not the place for me to advise you on what resident 
   477	programs you might want to put into your system but I would like to make some 
   478	comments about DOS and general aspects of what goes into your AUTOEXEC.BAT file.
   479	
   480	First, if you have very many resident programs, they may have conflicts and 
   481	you must be prepared to permute the order of loading which often cures some 
   482	or all of the conflicts.  For technical reasons I won't go into here it really 
   483	does pay to listen to SIDEKICK's demand to be loaded last although you need
   484	not take all the other Borland program demands quite so seriously.
   485	
   486	In addition to loading a stable of resident programs your AUTOEXEC.BAT can 
   487	contain some of the following:
   488	
   489	-a VERIFY ON command.  This slows down copying because DOS checks that the 
   490	 copy at least has consistent CRCs; this is not the same as comparing after 
   491	 copying but it is a fairly good check.  Only several compensating errors 
   492	 could pass this test after an incorrect copy.
   493	
   494	-set a PROMPT.  At a minimum use:
   495	
   496	      prompt=$p$g
   497	
   498	  Mine uses ANSI.SYS to set colors and place the path and date on the bottom 
   499	  line of my screen.
   500	
   501	-set a PATH.  If possible, keep your path short since every time you type in 
   502	  a bad command, DOS will have to read every directory in the path before 
   503	  responding "Bad command or filename".  Also try to list the path in the 
   504	  order of how many times you expect to access a given directory.  That is 
   505	  place the directories you call most often early in your path.  If you have 
   506	  a RAM disk, place its directories first in the path.  If you have a 
   507	  relatively large RAM disk, think about copying your BATch file directory and 
   508	  the programs you call often to that RAM disk and place that RAM disk first 
   509	  in your path.
   510	
   511	-If you have a large RAM disk, consider copying COMMAND.COM to it and placing 
   512	 the command:
   513	
   514	     SET comspec=D:\command.com
   515	
   516	 in your AUTOEXEC.BAT (assuming D: is your RAM disk).  Even without a large 
   517	 RAM disk, it is worthwhile to do this on a floppy based system.  What the 
   518	 command does is tell DOS to look there when it needs to reload COMMAND.COM 
   519	 (large programs will overwrite a part of COMMAND.COM and when they exit, DOS 
   520	 will try to reload COMMAND.COM.  With the above command, you'll no longer 
   521	 get "Place a disk with command.com in drive A: and hit any key to continue".)
   522	
   523	-It really is important to put the proper date and time in your system.  Be 
   524	 sure to include the DATE and TIME commands or else be sure to get a clock 
   525	 and place the appropriate commands setting the system time from the clock 
   526	 into your AUTOEXEC.BAT file.
   527	
   528	-if you want to keep track of how often you boot, keep a record in a 
   529	 convenient directory.  Make a file called junk consisting only of a carriage 
   530	 return line feed and include the lines:
   531	
   532	     date >>directory\logon <junk
   533	     time >>directory\logon <junk
   534	
   535	 You will then get the lines:
   536	
   537	     Current date is Wed  7-23-1986
   538	     Enter new date (mm-dd-yy): 
   539	     Current time is 16:29:22.70
   540	     Enter new time:
   541	
   542	 for each time you bootup.  With CED, EBL or some other programs you can get 
   543	 this record in a more elegant fashion without the "Enter new ..." lines.
   544	
   545	Speed and Memory tips
   546	
   547	Some final remarks about tricks to minimize memory usage and speedup your 
   548	bootup procedure.  When DOS loads any program it saves a copy of the current 
   549	environment in memory, one copy for each program.  It doesn't force the copy 
   550	to be as large as the empty space that you've set aside via a shell command 
   551	but only to keep in full the present value of all environmental variables.  
   552	Thus you can save memory by keeping the environment small while your
   553	AUTOEXEC.BAT file is loading your resident programs.  Two variables are always 
   554	present: path and comspec.  I start my AUTOEXEC.BAT file with a line:
   555	
   556	  Path=A
   557	
   558	This is incorrect syntax and gets ignored when the path is needed.  I have to 
   559	be sure to put down full path names of all the programs that I load but that 
   560	speeds processing any ways.  I reset the path and set the prompt at the end of 
   561	my AUTOEXEC.BAT after I've loaded my resident programs.  Given my fancy 
   562	prompt, I save almost 200 bytes per resident program from what would happen if 
   563	I set my path and prompt at the beginning of my AUTOEXEC.BAT.  In total I
   564	save several K of RAM: not a lot but every little byte helps.
   565	
   566	BATch files are read by DOS a line at a time so BATch files really do get 
   567	processed much faster from a RAM disk than from a floppy.  There is a smaller 
   568	difference between a hard disk and a RAM disk.  If you have a RAM disk and a 
   569	floppy based system, it is well worth your while to place what would have been 
   570	your AUTOEXEC.BAT in a file called startup.bat and have your AUTOEXEC.BAT read:
   571	
   572	   copy startup.bat C:
   573	   C:startup.bat
   574	
   575	assuming your RAM disk is C:.  To conserve space, you can have the last line 
   576	in startup.bat say:
   577	
   578	   erase C:startup.bat
   579	
   580	You'll get a "batch file missing" error message but other than that the method 
   581	will work perfectly.  This procedure can also be used on a hard disk.  The 
   582	savings when I did it on my hard disk was two seconds out of about 65 so you 
   583	may not feel it is worth your while.
   584	
   585	You can slightly speed up processing of BATch files especially from floppies 
   586	by using the FOR...IN...DO command to combine several commands in one line.  
   587	For example, if you want to copy \bin\batfiles, \bin\dump and \bin\opsys to 
   588	your RAM disk you might try:
   589	
   590	  for %%a in (\bin\batfiles \bin\dump \bin\opsys) do copy %a C:\ >nul
   591	
   592	if C: is your RAM disk.  This can actually cut about 10% off a long 
   593	AUTOEXEC.BAT file.  Several warnings are in order.  First, FOR...IN...DO parse 
   594	the list at spaces so you can't combine commands which have parameters in this 
   595	way.  Secondly, I strongly recommend against using this device to load 
   596	resident programs particularly if you plan to use Kokkenen's MARK/RELEASE 
   597	package.
   598	
   599	Summary
   600	
   601	By using your CONFIG.SYS and AUTOEXEC.BAT files you can personalize many 
   602	aspects of your PC.
   603	
   604	-----------------------------------------------------------------------------
   605	Then downloaded from The Cave BBS (Wellington) for the library of
   606	The Pinnacle Club (Auckland)...................................B.
   607	-----------------------------------------------------------------------------