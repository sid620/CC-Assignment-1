     1	This article appeared on USENET
     2	
     3	Subject: Re: Extended Memory
     4	From:  (Raymond Dunn @ Philips Electronics Ltd. -  St. Laurent  P.Q., Canada)
     5	
     6	
     7	
     8	Memory up to 1 Megabyte:
     9	-----------------------
    10	
    11	MSDOS is designed around the 8088 CPU which can address up to 1 megabyte of
    12	memory.
    13	
    14	In "industry standard" IBM PC architecture, this memory is organized in the
    15	following way:
    16	
    17	      1M +-------------+ FFFFF
    18	         |             |          System BIOS ROM
    19	         |             |
    20	         |             |
    21	         |             |
    22	    960K +-------------+ F0000
    23	         |             |           Option ROM and RAM
    24	         |             |
    25	         |             |
    26	    816K +-------------+ CC000
    27	         |             |           XT Hard Disk Controller BIOS ROM
    28	    800K +-------------+ C8000
    29	         |             |           Video BIOS ROM and option ROM and RAM
    30	         |             |
    31	    768K +-------------+ C0000
    32	         |             |           Video RAM space - various video types
    33	         |             |           have different requirements and starting
    34	         |             |           locations.
    35	         |             |
    36	    640K +-------------+ A0000
    37	         |             |
    38	         |             |
    39	         |             |           Base system RAM
    40	         |             |
    41	         |             |
    42	    1286 +-------------+ 506
    43	         |             |           Interrupt vectors and BIOS data area
    44	       0 +-------------+ 0
    45	
    46	MSDOS expects this architecture, and assumes that the RAM up to 640K is
    47	its resource to manage.
    48	
    49	Although MSDOS will not expect to find any RAM above 640K except video RAM,
    50	even though there actually may be some which it could use, e.g.  unused on a
    51	video card, on a special option card etc, it *will* however use any memory
    52	immediately above 640K if the BIOS specifies it is available.  This is
    53	communicated to MSDOS at boot time by BIOS setting the memory size in location
    54	413H of the BIOS data area.
    55	
    56	As an example of this, the Philips P3345 386SX based machine allows the system
    57	to be configured so that 64K is allocated at 640K to give a total of 704K of
    58	"base" system RAM.  This is *only* legal if an EGA/VGA video card is not
    59	present, as this has video RAM at this address.
    60	
    61	Some option cards provide RAM at other locations in the map.  Applications
    62	programs may use that RAM in a proprietary way.  It is not normally considered
    63	a DOS resource.
    64	
    65	An example of this is the Philips P3105 XT system.  It is more convenient on
    66	this machine to provide 768K of RAM using all 256K chips rather than be
    67	involved with 64K chips to provide 640K.  This "extra" 128K of RAM can be
    68	enabled if required at D0000.  A ramdisk driver is provided to use this
    69	memory.
    70	
    71	
    72	Extended and Expanded Memory:
    73	----------------------------
    74	
    75	Extended memory is an intrinsic part of the architecture of the Intel
    76	processor family, expanded memory is only defined in the architecture of the
    77	IBM-PC standard.
    78	
    79	*Extended* memory is memory directly in the CPU memory address space, above
    80	the 1 megabyte address.
    81	
    82	It is "extended" because the 8088 can only access 1 meg.  Thus "extended
    83	memory" is part of the "extended memory addressing" of the 80286 & 80386
    84	processors.
    85	
    86	*Expanded* memory is paged memory which can be addressed through a Page Frame
    87	within the first 1 megabyte, and is thus accessible on all processors, even the
    88	8088.  Expanded memory can be provided in a number of ways (see below).
    89	
    90	The mnemonic is easy, it is in the meaning of the words:
    91	
    92	-> -> ->        Extended is longer.        <- <- <-
    93	
    94	-> -> ->        Expanded is fatter.        <- <- <-
    95	
    96	When you buy an 80286, 80386 or 80386SX based machine which has more than 640K
    97	of RAM, that extra memory must be mapped somewhere, because *normally*, in the
    98	architecture of the PC, the area between 640K and 1M is used for video RAM,
    99	option card ROM and RAM, and the BIOS ROM.
   100	
   101	Some machines map the 384K from this hole on top of any *other* extended
   102	memory above 1M.  I.e. if the machine has 1M memory, the 384K is mapped at
   103	1M.  If the machine has 2M memory, the 384K is mapped at 2M etc.
   104	
   105	Some machines just map the memory away out of trouble at say 16 or 24Meg.
   106	
   107	Some machines use all or part of it to "shadow" the system BIOS, and
   108	sometimes a proprietary Video BIOS.  Thus during system initialization, these
   109	BIOSes are copied from ROM into the fast (16-bit or 32-bit) RAM,
   110	write-protected, and the BIOS from then on executes from there.  This
   111	obviously requires motherboard hardware support.
   112	
   113	Some machines allow all or part of the extended memory to be used as
   114	expanded memory.  This is achieved either by hardware support or software
   115	emulation as described below.
   116	
   117	*Some* machines allow all sorts of permutations of the above!  This is an
   118	area where manufacturers of clones can *add value*.
   119	
   120	
   121	
   122	Extended Memory:
   123	---------------
   124	
   125	As *MSDOS* assumes an 8088 and can thus only address the first 1 Megabyte of
   126	the address space, extended memory on a 286 or 386 has limited use with DOS.
   127	
   128	It is most commonly used as a RAM disk, because this involves only *block*
   129	access to the memory and is a nicely self-contained application, but it
   130	could also be used for caching, directly by an application, or to implement
   131	some *Expanded* Memory Scheme (EMS).
   132	
   133	An 80286 has a 24 bit address space, i.e. 16 megabytes (1 meg plus 15 meg of
   134	extended memory).
   135	
   136	An 80386 has a full 32 bit address space (work it out yourself!).  Most AT
   137	architecture implementations using an 80386 use a private memory address bus
   138	which limits the addressing to 16 or 24 or 32 Megabytes.
   139	
   140	Extended memory is not generally used in the MSDOS environment other than by
   141	RAM disk programs, disk caches, and expanded memory emulations, for several
   142	reasons:
   143	
   144	- It is not available on 8088 machines so *applications* which wish to be
   145	compatible across the whole product line stay away from using it directly.
   146	
   147	- It is not a standard resource, so there is no proper management of it for
   148	co-existing software (but see MSDOS 4.0 below).
   149	
   150	- It is very slow and a pain in the neck to access because MSDOS runs the
   151	80286 in native mode (i.e.  as an 8088).  To access above 1 meg the 80286 must
   152	be switched into protected mode.  This is fine, but there is no way to switch
   153	it back to native mode (this is one of the reasons that the 80286 is regarded
   154	as a brain-dead processor)!!  So, the trick used is to get the keyboard
   155	controller to RESET the CPU, and the BIOS reset code recognizes this and
   156	continues!  Thus it is really only good for some sort of *block* access to the
   157	memory, and there is an INT15 function in the BIOS which does this for you.
   158	All of this can be done more easily on an 80386, using its virtual 86 mode,
   159	but there are other problems running DOS in this mode (you have to trap I/O
   160	etc) and I wont go into that here.  There are also the usual "how does the DMA
   161	interact with logical addressing" type problems.
   162	
   163	The good news is that Unix and OS/2 make *full* use of extended memory, as
   164	they run the machine in protected mode.
   165	
   166	With release 4.0, MSDOS recognizes extended memory for the first time as
   167	more than just a RAM disk resource.  In addition to RAMDRIVE.SYS and a disk
   168	caching program, SMARTDRV.SYS, a device driver, HIMEM.SYS, is provided to
   169	manage the extended memory according to XMS 2.0 specification.
   170	
   171	XMS is an eXtended Memory Specification standard defined jointly by
   172	Microsoft, Intel, Lotus and AST (not to be confused with LIM, see below).
   173	This specification is available from them.  XMS 2.0 allows extended memory
   174	to be used by co-resident software, and, for example, allows TSR's to be
   175	positioned in extended memory.  
   176	
   177	Very few applications are currently written to make use of this standard -
   178	it is somewhat ironic that the provided RAM disk and disk caching routines
   179	RAMDRIVE.SYS and SMARTDRV.SYS do *not* use the XMS management routines when
   180	using extended memory, but *do* use LIM 4.0 when using expanded memory (see
   181	below)!
   182	
   183	XMS 2.0 also formally makes the first 64K of extended memory available as a
   184	non protected mode memory resource using the overflow into A20 trick.
   185	
   186	
   187	Expanded Memory:
   188	---------------
   189	
   190	There have been several standards for expanded memory.  Currently this has
   191	settled down into the LIM 4.0 standard (_L_otus _I_ntel _M_icrosoft in
   192	agreement).
   193	
   194	LIM 4.0 describes the following architecture:
   195	
   196	         PC MAIN MEMORY                LIM EXPANDED MEMORY
   197	         --------------                -------------------
   198	
   199	         +-------------+
   200	         |             |
   201	         . Extended    .
   202	         . Memory      .
   203	         . up to       .               /+-------------+ 32M
   204	         . 16M on the  .             // |             |
   205	         . '286,       .           / /  |             |
   206	         . 4096M on    .         /  /   |  Expanded   |
   207	         . the '386    .       /   /    |  Memory     |
   208	         |             |     /    /     |             |
   209	      1M +-------------+   /     /      |  Divided    |
   210	         |             | /      /       |  into 16K   |
   211	    960K +-------------+       /        |  logical    |
   212	         | Page Frame  |      /         |  pages      |
   213	         | 12*16K      |     /          |             |
   214	         | Physical    |    /           |             |
   215	         | Pages       |   /            |             |
   216	    768K +-------------+\ /             .             .
   217	         |             | /              .             .
   218	    640K +-------------+/ \             .             .
   219	         | Page Frame  |   \            .             .
   220	         | 24*16K      |    \           |             |
   221	         | Physical    |     \          |             |
   222	         | Pages       |      \         |             |
   223	         |             |       \        |             |
   224	    256K +-------------+        \       |             |
   225	         |             | \       \      |             |
   226	         |             |   \      \     |             |
   227	         |             |     \     \    |             |
   228	       0 +-------------+       \    \   |             |
   229	                                 \   \  |             |
   230	                                   \  \ |             |
   231	                                     \ \|             |
   232	                                       \+-------------+  0
   233	
   234	The expanded memory gives you up to 32M to map into up to 36 16K pages in
   235	the positions shown above.
   236	
   237	The page frame below 640K which allows the existing RAM to be shadowed are
   238	usually regarded as being for the use of operating systems/environments.
   239	The page frame above 640K, in the video RAM and "PROM" area, is for
   240	applications.  Code can be run or data stored interchangably in any of these
   241	frames.
   242	
   243	30 functions are defined using int 67H, to allocate, map, swap etc these
   244	pages.  These are provided, depending on the implementation, as a loadable
   245	driver (usually), an extension to the motherboard BIOS, or on a PROM on a LIM
   246	4.0 option card (not usual).
   247	
   248	The number of actual pages available in the page frame depends on the
   249	implementaion, and how much of the address space is already occupied by
   250	option card ROMS (and perhaps RAM's) in the machine.
   251	
   252	Applications which use LIM 4.0 can thus have a very large physical memory
   253	available to them, but must access it by manually switching pages as
   254	required (come back Z80 systems, all is forgiven!!)
   255	
   256	LIM 4.0 can be implemented in many ways:
   257	
   258	- as an option card with memory and page registers etc as I/O hardware to
   259	provide the mapping etc, and an on-board BIOS PROM to provide the
   260	functionality.
   261	
   262	- as a pure software emulation in a .SYS or TSR driver:
   263	
   264	  - using extended memory and virtual 86 mode on an 80386 so that the
   265	    memory is mapped using the MMU into any of the physical LIM pages.
   266	
   267	  - *copying* into the RAM pages existing below 640K, either from extended
   268	    memory (if other than 8088), or from, say, disk.  This is much slower as
   269	    pages are swapped using copying rather than just updating page registers.
   270	
   271	- using extended memory and mapping and page register logic built into the
   272	motherboard ASICs or logic on an 80286 or 80386 machine.  Philips has two
   273	machines using this approach, the 80386SX based P3345 using the NEAT chipset,
   274	and the 80286 based P2230 using the G2 chipset.
   275	
   276	- combinations of the above etc.
   277	
   278	LIM 4.0 management is handled by its BIOS only in so far as the application
   279	can ask it what pages are free, how much memory is free to map etc., and to
   280	perform the actual mapping.  The actual use of this paging is left up to the
   281	application.  Neither LIM 4.0 nor DOS demand pages or anything remotely like
   282	that, nor do they support an application's use of LIM in any other way.  Two
   283	or more co-existing applications can share the LIM quite happily if they are
   284	well behaved (i.e.  use LIM *only* through the BIOS calls).
   285	
   286	Functionality is provided to allow the saving and restoring of the page
   287	registers etc, so that even interrupt routines can safely be written to use
   288	LIM memory, assuming they allocate all their requirements up front.
   289	
   290	Whether or not LIM memory will be useful to you is *application* dependant.
   291	Check to see if the applications you propose to use can take advantage of
   292	it.
   293	
   294	Release 4.0x of MSDOS *does* recognize LIM 4.0's presence, and allows buffers
   295	and fastopen file names etc to be allocated in LIM pages, and DEBUG now
   296	"understands" LIM.  In no way is LIM *integrated* into the operating system
   297	though.  A driver, EMM386.SYS, is provided in DOS 4.0 to emulate LIM 4.0 using
   298	the *extended* memory of a 386 based machine.
   299	
   300	The RAM disk and disk caching routines RAMDRIVE.SYS and SMARTDRV.SYS can be
   301	configured to use extended memory, *or* expanded memory under the control of
   302	LIM 4.0.
   303	
   304	The "Lotus/Intel/Microsoft Expanded Memory Specification Version 4.0"
   305	(published by, you guessed it, Lotus, Intel and Microsoft), is the
   306	definitive manual, and is available from them.
   307	
   308	-- 
   309	Ray Dunn. 
   310	Philips Electronics Ltd.     | TEL : (514) 744-8200  Ext: 2347
   311	