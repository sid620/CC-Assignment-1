     1	    Amiga 8meg ram expander  (C)1991 Silicon Synapse Electronics
     2	Designed by John Kamchen  Support BBS: (204) 589-1078  Wpg,MB Canada Nov.28
     3	
     4	-----------------------------------------------------------------------------
     5	This project is ShareWare. If you build it, and it works (why wouldn't it?)
     6	then passing $20 along my way would help pay for future projects as fantastic
     7	as this one. The address is at the end of this file.
     8	-----------------------------------------------------------------------------
     9	
    10	
    11	With memory prices dropping every day, a fully expanded Amiga looks better all
    12	the time. If you shop around, you can get a 1meg simm for less than $40. That
    13	means an 8meg system will set you back $320. Not that bad, considering 3 years
    14	ago that would have got you only 2 megs. But you need more than just RAM, you
    15	also need a RAM CARD (duhh). These days, you have a big selection to choose
    16	from. GVP, IVS, ICD to name a few. Some are simply RAM cards, some have an
    17	SCSI host as well. My GrandSlam cost $300, a Meta4 about $175, DataFlyer RAM
    18	about $125. Now you can build your own 8meg expander for less than $10 !
    19	
    20	If you shop around, you can get all the interface and control chips for less
    21	than $5 ($4.98 to be exact). The parts list shows prices from Active. Adding
    22	sockets and whatever jacks the price up a few bucks.
    23	
    24	Parts List:        Cost
    25	     U1   74ls138   .40
    26	U2 - U6   74ls157  2.35
    27	U7 - U8   74ls245  1.28
    28	     U9   74ls14    .35
    29	    U10   74hc08    .31
    30	    U11   74ls32    .29
    31	Misc:
    32	Decoupling caps 11 x .1uf
    33	
    34	How it works:  RAM ACCESS
    35	When the CPU accesses the area from $20000 to $9FFFFF, U1 decodes A21-A23 to
    36	provide 4 possible bank select signals. About 58ns after _AS goes low, _RAS
    37	will also go low. Depending on what kind of access it is (WORD BYTE READ
    38	WRITE) one or two _CAS lines will go low either 94ns (READ) or >100ns (WRITE)
    39	after _AS low. Remember that on the 68000, _UDS/_LDS go low at the same time
    40	as _AS for a READ, but are delayed for a WRITE. That is why they go thru the 2
    41	OR gates (U11). This ensures that _CASxx will fall at the right time.
    42	When _AS goes high at the end of the cycle, _CASxx goes high first, then _RAS.
    43	
    44	REFRSH MODE
    45	The DRAM memory is being used in _CAS before _RAS refresh mode. This means
    46	that if _CAS is brought LOW about 20ns before _RAS, the DRAM automaticly
    47	selects what row to refresh. Only 64k x 4, 256k x 4 and 1meg x 1/4 support
    48	this feature. Otherwise, there would need to be counters and stuff added,
    49	maybe 5 more chips. When the CPU accesses CHIP ram ($0 to $1FFFFF), Y0 of U1
    50	goes LOW. This is the signal that says 'Time to refresh, cuz we ain't gonna be
    51	needed on this cycle'. All _CASxx lines will come low 72ns after _AS LOW,
    52	followed by _RAS LOW 100ns after _AS LOW. So the time diff between _CAS and
    53	_RAS is about 28ns, within the 20ns min parameter. The chip is kept refreshed
    54	untill the cycle ends.
    55	
    56	CONSTRUCTION:
    57	This design uses D0-D15, A1-A23, R/W, _AS, _UDS and _LDS. All these signals
    58	can be found at the expansion port of the 500, or CPU/Zorro slots on a 2000.
    59	For 500 owners ,this board could also be placed under the 68000 itself,
    60	saving your expansion port for better things. As long as you provide a good
    61	power path, there should be no problems. My proto-type board with 2megs used
    62	around 300ma while running Memory_Doctor, and 169ma just sitting there, no
    63	programs running. It uses ALOT more than my GrandSlam (90ma) for refreshing,
    64	but I'm not using custom chips and they are. For a 500 supply, 8megs might be
    65	more than it can handle, so consider buying a 150-200w switching supply (any
    66	AT type will do since they cost half as much as a '500 specific' supply).
    67	
    68	SIMM sockets cost ALOT of bucks, so you may want to spend a $1 more and buy
    69	SIPP ram (with the pins). Those can fit into normal IC sockets (Just to give
    70	you an idea, 8megs of SIPP sockets cost $21, while 12 20pin sockets cost
    71	$2.50). The SIPPs will tend to sit in at an angle, so fashion some type of
    72	brace for them. If you use SIPP ram, the board won't fit inside a 500, but
    73	low-profile SIMM sockets just might.
    74	
    75	Get the exact same parts that I have in the parts list. Don't sub an HC for an
    76	LS. All types have been chosen for their propagation times. Best place to get
    77	the parts is Active Components. They are cheap, and always have good stock. I
    78	have heard of people being charged upto $2 a chip at some other places (Radio
    79	Shack, WES). Board layout isn't critical, but use some common sense, try and
    80	keep data and address lines together, and so forth. Wire wrapping is OK.
    81	
    82	
    83	ADDING RAM:
    84	You can use 1meg by 8 (or 9, some place charge MORE for the 8bit sipp!), or
    85	256k x 8/9 sipps. To use the 256k, they must have only 2 chips on them (3 if
    86	it is a 9bit simm). Why?  The ones with 8 or 9 chips use 256k x 1 type DRAM
    87	chips. Those are fine in other ram expanders but not here. They DON'T support
    88	_CAS before _RAS refresh. The 256k x 4 do, so that's what type you need.
    89	 ___________________________    ___________________________
    90	 | || || || || || || || || |    |--------  --------   ----|
    91	 | || || || || || || || || |    |--------  --------   ----|
    92	 uuuuuuuuuuuuuuuuuuuuuuuuuuu    uuuuuuuuuuuuuuuuuuuuuuuuuuu
    93	    These won't work!               These WILL work fine.
    94	
    95	AUTO-CONFIG:
    96	As is, the design will not configure on power up. A program called AutoAddRAM
    97	is used to patch the expansion into the free memory pool. If you have a hard
    98	drive, this can be done during the startup-sequence. For floppy users, follow
    99	the docs for the program. Unlike a PAL'd ram card, this one hard-wires the ram
   100	address area. The folowing are some examples of how to write the .arr file.
   101	
   102	200000 3ffffe 0 Little         /* 2meg, using 1meg simm, in bank 1 & 8
   103	400000 9ffffe 0 BigBoy         /* 6meg, using 1meg simm, bank 2,3,4,5,6 & 7
   104	
   105	200000 27fffe 0 Expansion      /* 256k, using 256k simm, bank 1 & 8
   106	400000 47fffe 0 Expansion      /* 256k, bank 2 & 7
   107	600000 67fffe 0 Expansion      /* 256k, bank 3 & 6
   108	800000 87fffe 0 Expansion      /* 256k, bank 4 & 5
   109	
   110	With those last 256k areas, you just added 2megs, although it's broken up into
   111	4 256k sections in the expansion mapped area. This is a cheaper way to get to
   112	2megs, since those 256k simms are CHEAP when bought used. I found that APPLE
   113	service centers seems to always have the right type of simm (I assume
   114	Apple/Mac machines use _CAS before _RAS as well).
   115	You can also mix and match memory sizes, 2megs using 1meg simms, and an extra
   116	768k using 256k simms. This list shows where your memory will show up.
   117	
   118	       Bank1/8  Bank2/7  Bank3/6  Bank4/5
   119	from   $200000  $400000  $600000  $800000
   120	256k   $27fffe  $27fffe  $67fffe  $67fffe
   121	1meg   $3ffffe  $5ffffe  $7ffffe  $9ffffe
   122	
   123	I provided an .iff picture of where to place the parts and all. There are
   124	holes here and there for decoupling caps. There are also 2 files in
   125	BoardMaster format, which contain the actual artwork. Those can be plotted,
   126	or HP LaserJet printed using BoardMaster. A good way to mount this board is
   127	to solder 64 wires into the board, then solder your 68000 to those (Look at
   128	the AtOnce). Just an idea.
   129	----------------------------------------------------
   130	Also from Silicon Synapse Electronics ShareWare Division:
   131	
   132	S.A.P.E.P.  (Simple Amiga Parallel Eprom Programmer)
   133	Incredible software/hardware combo. Program 2764-27128 21v/12.5v eproms thru
   134	the Pport. Fairly simple project shows just how versitile the Amiga's parallel
   135	port can be! Includes complete schematics, SAPEP program & C source.
   136	
   137	The Computer Tech Journal
   138	Issue #1: Audio Sampler Fundamentals (includes demo circuits)
   139	Issue #2: 8meg Ram for Amiga  (ignore this, new one this fall)
   140	Issue #3: Eprom Programmer (Look for S.A.P.E.P., software/hardware project)
   141	Issue #4: Proto-Board for the Amiga  (a must have for any Amiga hacker!)
   142	
   143	To get all the ShareWare/PD files listed in this file, just send $2 (US or
   144	CDN) and your return address to:
   145	
   146	  John Kamchen
   147	c/o Silicon Synapse Electronics
   148	41 Matheson Ave.E
   149	Winnipeg Manitoba Canada
   150	           R2W-0C1
   151	
   152	Or call Silicon Synapse Electronics BBS (204) 589-1078 12/24 24hrs
   153	or Fire & Brimstone BBS (204) 255-8824  12/24 24hrs Fido# 1:348:705.0
   154	
   155	J.Kamchen  Nov.27  1991  3:30pm
   156	-eof-
