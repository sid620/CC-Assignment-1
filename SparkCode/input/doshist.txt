     1	THE DEVELOPMENT OF DOS
     2	
     3	Personal computers began appearing in the mid 1970's, initially as
     4	hobbyist toys that didn't even have keyboards or screens.  The first
     5	real one, named Altair by a magazine editor's 12-year old daughter who
     6	liked a Star Trek episode that took place in that solar system, was
     7	built around a jazzed-up calculator chip, the Intel 8080.
     8	
     9	Produced as a do-it-yourself kit by a company called MITS, it came with
    10	256 bytes of memory. Since it lacked a keyboard, you entered data by
    11	flipping switches on the front panel in binary sequence.  Because it had
    12	no screen, you had to decode the patterns of blinking lights it
    13	produced.  And it didn't let you store data permanently.
    14	
    15	Two teenagers, Bill Gates and Paul Allen, who had started a company
    16	called Traf-o-Data to make Intel-based computers to measure how many
    17	cars ran across a rubber hose stretched across the road, saw a picture
    18	of the Altos on the cover of an electronics magazine and developed a
    19	version of BASIC for it.  Gates upgraded AltairBasic later to include
    20	primitive file and disk-storage abilities.
    21	
    22	The pair changed the comapny name to Microsoft; by 1976 the industry had
    23	progressed to the point where Gates was railing against software pirates
    24	(although back then pirates were making copies of punched paper tape
    25	rather than floppies).  A few years later Gates became the worlds
    26	youngest billionaire.
    27	
    28	Soon after the Altair introduction, some hard-driving salespeople became
    29	the market leaders with their Imsai 8080, another Intel-based machine,
    30	and the first computer aimed squarely at small businesses.  To let users
    31	store data efficiently, Imsai developed a floppy disk drive whose motors
    32	and circuits were run by a program called CP/M (Control Program for
    33	Microcomputers), which had been licensed from Intergalactic Digital
    34	Research - later shortened to Digital Research.  DR's Gary Kildall had
    35	created CP/M while working for Intel, to scale down the PL/1 programming
    36	language into a version that would fit on a microcomputer.  Intel hadn't
    37	seen much value in this brand new CP/M thingy and had given Kildall all
    38	rights to it.
    39	
    40	The early versions of DOS owe quite a bit to CP/M.  In fact, things like
    41	the .COM formats of CP/M and DOS and the basic system calls were so
    42	similar that programmers could easily switch up from CP/M.  CP/M uses a
    43	command interpreter called CCP (or Console Command Processor) and two
    44	fundamental system files called BDOS and BIOS to handle files and I/O.
    45	This arrangement is nearly identical to the DOS COMMAND.COM, IBMDOS.COM
    46	and IBMBIO.COM system trio.  What was especially remarkable about CP/M
    47	was that it took up only 4k of space.  DOS 1.0 doubled that and it has
    48	been mushrooming ever since.
    49	
    50	Chain store magnate and leathercrafter Charles Tandy tried
    51	unsuccessfully to buy computers from Imsai, then ended up creating his
    52	own system, the TRS-80, which contained a Zilog Z-80 chip, 4096 bytes of
    53	memory, and came fully assembled rather than in a kit.  To shave a few
    54	dollars off the price he designed it to work entirely in upper case
    55	letters.  Customers snapped them up as fast as Tandy could make them.
    56	
    57	What really kicked the microcomputer business into high gear, however,
    58	were a handful of visionary renegades from California and Florida.
    59	
    60	In 1976 Steve Wozniak and Steve Jobs, whose early careers included a
    61	stint peddling "black box" devices to circumvent telephone toll billing
    62	computers, bought some 6502 chips and built a few hundred copies of a
    63	computer they christened the Apple I.  It too worked only in upper case
    64	letters.  Their second-generation Apple II offered an optional floppy
    65	disk drive, and sold several orders of magnitude more.  On reason for
    66	its success was a revolutionary program called Visicalc.  Visicalc
    67	turned Apple's little computer into a powerful financial analysis and
    68	planning machine.
    69	
    70	But not all operating systems run on all chips.  CP/M worked on the 8080
    71	and Z80 chips but not on Apples 6502.
    72	
    73	Microsoft's Gates and Allen moved to Seattle to write programming
    74	languages for computers built around Intel and Zilog processor chips and
    75	running CP/M. Dismayed that their languages woudln't work on Apples,
    76	they considered translating them all to run on Apples proprietary
    77	operating system, an arduous job.  Instead they joined the crowd,
    78	licensed CP/M, and sold it along with an add-in board that had a Zilog
    79	chip on it.  Apple owners could stick the Microsoft boards in their
    80	computers and run any CP/M program.
    81	
    82	But Apple was an 8-bit machine and Gates and Allen felt Intel's new
    83	16-bit processors were the wave of the future.  So did a local board
    84	maker called Tim Patterson who worked for Seattle Computer Products.
    85	All earlier processor chips managed data in 8-bit chunks.  Intel's new
    86	8086/8088 chips finally doubled the processor power.
    87	
    88	Patterson's board had an 8086, and he needed a new 16-bit operating
    89	system to take advantage of it.  Digital Reserach had announced that it
    90	was going to tweak CP/M into a 16-bit version, but Patterson couldn't
    91	wait.  In early 1980 he started work on one of his own design called
    92	QDOS (Quick & Dirty Operating System) that was to become 86-DOS (or
    93	SCP-DOS) and eventually just plain DOS. To make it relatively easy for
    94	programmers to translate CP/M softwrae to his system, he retained
    95	fundamental CP/M file management structures and mimicked the way it
    96	loaded and ran programs.  Patterson then added a device known as a File
    97	Allocation Table (FAT) which Gates had used in Altair disk BASIC, and a
    98	few other refinements.
    99	
   100	--------------------------------------------------------------------
   101	DOS 1.0
   102	
   103	In late 1980, IBM approached Microsoft and revealed that it was
   104	considering production of its own 8-bit computer.  Vast helpings of
   105	money, ego, pride and general corporate paranoia have tempered details
   106	of this exchange, but the popular version is that IBM wanted Microsoft
   107	to design a version of BASIC for its new machine that would be delivered
   108	on a ROM chip inside the IBM chassis. Gates was happy to oblige and
   109	wanted to do a whole raft of languages, as the story goes, but argued
   110	that IBM should consider a 16-bit computer instead. When IBM asked who
   111	made a 16-bit operating system, Gates is said to have suggested that IBM
   112	contact Gary Kildall - and supposedly even dialled the phone to Digital
   113	Research himself.
   114	
   115	Here the tale gets very fuzzy.  According to the one telling it, when
   116	IBM trooped down to see Digital Research the next day, Kildall's wife
   117	and lawyer were hesitant to sign IBM's strict non-disclosure agreements.
   118	Other stories had Kildall out flying his plane while IBM executives
   119	waited impatiently for him to land.  Microsoft's own publications admits
   120	that Gates and Allen had heard rumours that Kildall was about to buy a
   121	version of BASIC from one of Microsoft's competitors and give it away
   122	free with every copy of CP/M-86, which didn't exactly endear him to
   123	them.
   124	
   125	In any event, Gates and Allen bought the rights to Patterson's 86-DOS
   126	for around $50,000.00 and proposed to IBM that Microsoft provide BASIC,
   127	FORTRAN, Pascal, COBOL, an 8086 Assembler, and the 86-DOS operating
   128	system for the new computer.  IBM agreed in November 1980, and on August
   129	12, 1981 introduced the world to its new PC and its main operating
   130	system, Microsoft's DOS 1.0, which IBM called PC-DOS.  At the
   131	announcement, IBM announced that users would someday be able to buy two
   132	competing operating systems: CP/M-86 or the UCSD-p System. But IBM
   133	priced these much higher than DOS, and since they were late reaching the
   134	market and received little support from other software vendors, they
   135	went nowhere.
   136	
   137	Computer hardware isn't useful without software. And IBM initially
   138	didn't offer much software - EasyWriter, a bug-filled version of a
   139	mediocre word processor; Adventure, a mainframe text game adapted to run
   140	on microcomputers, a DOS version of VisiCalc, some artless business
   141	software, a few Microsoft languages and one or two other packages.
   142	
   143	The most powerful and popular programs back then - dBase II and WordStar
   144	- ran only on CP/M systems.  One of IBM's highest priorities was to make
   145	it easy for software vendors to translate programs from CP/M to DOS, and
   146	it was smart enough to know that making it easy meant making the two
   147	operating systems similar.
   148	
   149	Many of the DOS features that todays users truly hate - such as overly
   150	brief eight-character filenames with three letter extensions, terse
   151	prompts like A>, and unfriendly or missing messages (such as the stony
   152	silence in response to file deletions) were directly swiped from CP/M.
   153	So were underlying structures such as File Control Blocks (FCB's),
   154	Program Segment Prefixes, and reliance on CP/M's memory loading
   155	addresses.
   156	
   157	DOS did change a few CP/M quirks.  File lengths that were rounded off in
   158	CP/M were reported precisely in DOS.  Some commands were turned around
   159	to be more logical.  Programmers could treat I/O to peripheral devices
   160	like printers and screens the same way that they handled files.  DOS's
   161	variable record lengths made disk storage and retrieval far more
   162	efficient.  DOS could load and run larger .EXE format files in addition
   163	to the smaller CP/M-standard COM-format files which were limited to 64k.
   164	And it could keep a program loaded but inactive in memory, so that users
   165	could pop it onto their screens whenever they needed it .  DOS relied on
   166	a FAT, first used by Bill Gates and Tom Patterson, to keep track of
   167	where all the various pieces of a file were stored, and could read and
   168	write more than one piece of data at a time, which speeded up disk
   169	activity significantly.
   170	
   171	DOS at least theoretically made it easier for programmers to create
   172	their own version of the COMMAND.COM user interface, although none has
   173	ever caught on. But the ability to run scripts of commands called batch
   174	files became very popular. When DOS reported inevitable errors, it did
   175	so in a slightly friendlier way than CP/M, and it handled severe
   176	hardware errors far better. DOS also sniffed out new disks automatically
   177	while CP/M forced users to log such changes manually, and it kept track
   178	of the date files were created or changed.
   179	
   180	It also split the COMMAND.COM interface into several parts, a mixed
   181	blessing. When the PC was new, and IBM offered it with a maximum of 64k
   182	memory, this feature was welcome since it let other space-hungry
   183	software temporarily steal a few thousand characters of memory from DOS.
   184	When the user was finished with the software he'd have to insert his DOS
   185	disk in drive A: so that the part of DOS that hadn't been stolen could
   186	reload the part that had.  Trouble was that a short time later users
   187	were buying systems with ten times that much memory, and the amount of
   188	space freed up by this technique was relatively insignificant. But
   189	floppy disk users still had to contend with keeping a DOS disk handy to
   190	reload the "transient" stolen part.
   191	
   192	One of the worst things about the first IBM PC and its operating system
   193	was that it could store only 160k of data on floppy disks that were
   194	clearly capable of storing twice as much.  A standard floppy has two
   195	usable sides, but the first PC - and DOS - could only use one.
   196	
   197	The initial DOS release contained several nasty bugs.  In mid-1982, IBM
   198	began shipping PC's with double-sided drives, and released DOS version
   199	1.1 to handle the new storage abilities and to fix several of the early
   200	bugs.  Microsoft then released its own generic upgrade which it called
   201	MS-DOS 1.25.
   202	
   203	The initial release of DOS was tiny and relatively crude.  Version 1.0
   204	TIME and DATE commands were separate short programs rather than part of
   205	the main COMMAND.COM interface.  While the DOS 1.0 directory listing
   206	noted the date a file was changed or created, it ignored the time.  The
   207	MODE command couldn't set communications speeds or protocols, or let the
   208	PC's parallel printer adaptor work with the many serial printers on the
   209	market.  The COPY command wouldn't join or concatenate several small
   210	files into a larger one.  The onscreen messages and prompts were
   211	especially ugly and cryptic.
   212	
   213	DOS 1.1 fixed all these problems, or at least made them less irritating.
   214	The biggest problem of all was that DOS was still constrained by its
   215	CP/M heritage and its clanky internal structure.  And although IBM
   216	doubled the amount of disk storage space from 160k to 320k, users found
   217	this was far from enough.  They demanded disks that were faster and more
   218	efficient.
   219	
   220	----------------------------------------------------------------------
   221	DOS 2.0
   222	
   223	In March 1983, IBM announced its PC-XT, a beefed-up version of the
   224	standard PC that came with three addtional internal expansion slots (for
   225	a total of eight), a ten-megabyte hard disk, and a new version of DOS -
   226	2.0.
   227	
   228	The new hard disk - which IBM referred to as a fixed disk - could hold
   229	the equivalent of more than 31 double-sided floppies.  But all that
   230	storage space introduced a new problem.  DOS 1.0 and 1.1 had crammed all
   231	the file information for each floppy disk into a single directory.  A
   232	single-sided floppy had room for a maximum of 64 directory entries, and
   233	you could fit only 112 on a double-sided diskette.
   234	
   235	Keeping track of all the files on a hard disk meant coming up with a new
   236	DOS file management and directory system.  CP/M had dealt with large
   237	disks by splitting them (or partitioning) them evenly into smaller ones,
   238	an inelegant and inefficient solution.  But UNIX, an operating system
   239	developed by the phone company, could handle vast volumes of files with
   240	relative style and ease. Microsoft had licensed UNIX, and was offering a
   241	version of it called XENIX.  At the heart of UNIX/XENIX was a
   242	hierarchical or tree-structured directory system that gave users lots of
   243	flexibility in dividing up the available storage space.
   244	
   245	
   246	Microsoft adapted this tree-structured system as the core of a
   247	significant new incarnation of DOS - version 2.0.  But it blundered
   248	slightly.  UNIX used a slash (/) to identify the subdirectory levels
   249	that acted as branches on the tree structure.  But earlier DOS versions
   250	used slashes as switches (command suffixes such as the /s in FORMAT /s)
   251	that turned optional features on and off. Microsoft substituted a
   252	backslash (\) to identify subdirectory levels, which eneded up confusing
   253	a whole generation of DOS and UNIX users, and caused much consternation
   254	abroad where foreign keyboards often didn't come with backslash
   255	characters.
   256	
   257	IBM and Microsoft also had to find a way to deal with an explosion in
   258	the number and type of devices that manufacturers were stamping out for
   259	the PC. One of DOS's main roles was to manage the communication between
   260	the PC and anything else you could hook up to it.  If DOS had to contain
   261	explicit internal tables and instructions for every possible device it
   262	would end up being absurdly large and cumbersome.
   263	
   264	Microsoft designed a new version of DOS with hooks in it so that
   265	manufacturers of peripheral equipment could supply installable device
   266	driver programs to hook the new hardware effortlessly into the operating
   267	system.  Users could load these specific additional sets of instructions
   268	into DOS as needed, through a special CONFIG.SYS file.  This file also
   269	let users customise their systems by telling DOS how much memory it
   270	should devote to disk buffers, how many files could be opened
   271	simultaneously, and how frequently DOS should check to see whether a
   272	user was hitting the Ctrl-Break panic button.  It also made it easy for
   273	users to load a replacement command processor if they weren't planning
   274	on using the standard COMMAND.COM, or tell DOS if they were storing
   275	COMMAND.COM in an unusual place.  And it gave users extended screen and
   276	keyboard control with ANSI.SYS, a special device driver supplied by
   277	Microsoft in an unsuccessful attempt to standardise certain parts of the
   278	user interface across different computer systems.
   279	
   280	Version 2.0 introduced several new commands most users can't live
   281	without.  Its hard to believe, but versions 1.0 and 1.1 didn't have any
   282	way to clear the screen.  CLS now does it.  This version was also the
   283	first to offer batch file commands such as ECHO, IF, FOR, SHIFT and
   284	GOTO.
   285	
   286	DOS 2.0 also introduced a raft of commands and utilities to give users
   287	cintrol of hard disks although some, like the pathetic TREE command -
   288	designed to "display the entire directory structure" are a bad joke.
   289	
   290	Perhaps to compensate, IBM threw in a gem that has become a power users
   291	best friend - the mini-assembler in DEBUG.  You can become an absolute
   292	computer whiz without ever having to learn a single thing about hex
   293	codes or assembly language.  But if you want to climb inside your system
   294	and stomp on the gas pedal, there's no better way.  Its a lot easier
   295	than you think.
   296	
   297	One of the most significant changes in DOS 2.0 was the way it dealt with
   298	files internally.  To remain compatible with CP/M, DOS 1.0 and 1.1 kept
   299	track of critical file information with a device called a File Control
   300	Block (FCB).  But as programs became more sophisticated they were forced
   301	to manipulate the data stored in FCB's directly, which was awkward and
   302	potentially dangerous.  And FCB's had no provision for subdirectory
   303	names.
   304	
   305	DOS 2.0 introduced file handles as an optional way to streamline disk
   306	management.  Once DOS knew about a particular file in a partcular
   307	directory, it could act on that file simply by using a two-character
   308	shorthand code called a handle.  In addition, DOS established five
   309	special handles that made it a snap to switch inputs and outputs.
   310	Normally the keyboard and screen (which DOS collectively refers to as
   311	CON:) act as both the input and output.  But DOS 2.0 let users
   312	"redirect" input or output to or from printers, files or other devices.
   313	And it allowed users to "pipe" streams of data through filters to do
   314	things like turn uppercase files into lowercase, strip out extraneous
   315	characters, or sort records into alphabetical order.
   316	
   317	The sample filters DOS 2.0 provided are actually pretty useful.  They'll
   318	let you slog through files and skim out the text you want saved or
   319	discarded. They'll sort your directories (or any list of names, numbers,
   320	or items that have carriage returns at the end of each entry) lightning
   321	fast.  And they'll paue your displays for you so you'll never again have
   322	text scrolling off your screen too quickly to read.
   323	
   324	To top it off, DOS 2.0 provided rundimentary background processing.  DOS
   325	was originally designed as a sigle-tasking operating system that let
   326	users do just one thing at a time.  But the designers of version 2.0
   327	threw in a PRINT spooler command that could print out one file while a
   328	user was actively working on another.
   329	
   330	While spoolers are nothing new, this one was.  Spoolers normally lop off
   331	a big chunk of RAM and trick DOS into sending files to memory that were
   332	really destined for the printer.  Then they wait for a quiet moment and
   333	re-route the files onto your printed page.  When they're done printing,
   334	however, they still hold on to all the memory they've hogged - very
   335	inefficient.  The DOS PRINT command reads files off your disks and uses
   336	your precious memory much more sparingly.  It watches how you work, and
   337	about 18 times each second, if you're not doing something at that
   338	precise moment, it sneaks a few characters at a time to the printer.
   339	Your computer is so fast that this "time slicing" technique makes it
   340	appear that it's doing two things at once, when it really alternating so
   341	quickly you don't notice it.  And the best part is that if you happen to
   342	be working on something that tales more of your computer's constant
   343	attention than usual, you can adjust how frequently the spooler tries to
   344	intercede.
   345	
   346	In addition, DOS increased the number of 512-byte sectors from eight to
   347	nine. While DOS kept the number of tracks at 40, this upped the storage
   348	capacity of each disk from 320k to 360k.  DOS 2.0 also let users add
   349	electronic volume labels to their disks, gave them access to part of the
   350	memory called the environment, in which critical system settings were
   351	maintained, made memory allocation more efficient, and threw in more
   352	than two dozen new commands.
   353	
   354	With so many changes and features, you'd think a brand new version of
   355	DOS would be filled with insidious bugs.  And you'd be right.  In March
   356	1984, a year after the PC-XT introduction, IBM released DOS 2.1 to
   357	excise these software errors - and to handle a hardware error it
   358	produced called the PC-Jr.
   359	
   360	The less said about the PC-Jr the better.  While it provided more
   361	colours onscreen in graphics mode than IBM's real microcomputers, and
   362	came with three-voice sound that could play chords, it was utterly
   363	non-standard inside and out.  In fact, it used such a cheap, flimsy disk
   364	drive that DOS 2.1 had to slow down the drive performance so the thing
   365	wouldn't crash.
   366	
   367	What's especially sad about all this is that lots of users still rely on
   368	DOS 2.1, which means they have to put up with unacceptably slow disk
   369	access times even though the're using machines that could handle much
   370	higher speeds.  A pity, and another good reason to upgrade to a more
   371	recent DOS version.
   372	
   373	Microsoft ended up producing versions 2.05, 2.11, 2.2 and 2.25 with an
   374	added modicum of international time, date, keyboard and currency
   375	support.  These may come in handy if you need to work with Korean
   376	Hangeul or Japanese Kanji characters; today Microsoft sells DOS in more
   377	than 60 assorted languages.
   378	
   379	-----------------------------------------------------------------------
   380	DOS 3.0 and Beyond
   381	
   382	IBM's PC and PC-XT brought microcomputing into the mainstream of
   383	American business. But these machines were both relatively slow and
   384	small. In fact, they weren't really even true 16-bit computers. While an
   385	Intell 8088 CPU ticked away inside each one, their system bus - the
   386	connecting pathway of wires that ties the CPU to all other parts of the
   387	system - was a bottleneck that worked in eight-bit chunks only.
   388	
   389	IBM introduced its first genuine 16-bit system, the PC-AT. Compared to
   390	IBM's earlier releases, this was a real rocketship of a computer. Inside
   391	was an 80286 CPU with a trick up its sleeve - it could run everything
   392	IBM and Microsoft could throw at it and it could also accomodate
   393	Microsoft's ne operating system, OS/2. And it needed a new version of
   394	DOS - 3.0.
   395	
   396	Engineers measure computer performance in many ways. Two prime
   397	indicators are the clock speed of the CPU and the average access time of
   398	the hard disk. The faster the clock, the faster a computer processes
   399	instrauctions and the faster just about everything runs. The speedier
   400	the hard disk access time, the sppedier it can read and write programs
   401	and data. The higher the clock speed and the lower the average access
   402	time, the faster the system.
   403	
   404	Both the PC and the PC-XT run at 4.77 MHz. IBM sold many different
   405	brands of hard disks for the XT, and the average access time was
   406	somewhere between 80 and 115 milliseconds.
   407	
   408	The official clock speed of IBM's first AT was 6MHz, but users quickly
   409	found out that by replacing a socketed $4 quartz crystal on the main
   410	system board they could boost performance to 8 or even 9 MHz without any
   411	ill effects. (IBM is famous for publishing ultraconservative
   412	specifications and holding down performance a bit on purpose.) When IBM
   413	discovered that users were hot-rodding their systems, they wrote a
   414	program that acted as a speed governor and put it on a system ROM chip
   415	to stop tampering.
   416	
   417	All of IBM's AT hard disks ran at 40ms or better. Unfortunately, the
   418	first big batch of AT's came with CMI-brand drives that crashed in
   419	shockingly high numbers. Hard disks - rapidly spinning precision-crafted
   420	aluminium platters with magnetic coatings on both sides - need precise
   421	feedback on where their magnetic read/write heads are located. If the
   422	location mechanism is off by even a tiny bit the heads can write bad
   423	data over good or wipe out important tables that tell the computer where
   424	files are stored.
   425	
   426	Hard disk heads actually "fly" on a cushion of air directly above the
   427	surface of the platters themselves. All decent hard disks retract or
   428	'park" the magnetic heads when the power goes off so they don't sink
   429	down and plough furrows into your data. To save money, CMI disks used
   430	what many believe was an unreliable implementation of "wedge servo"
   431	technology. Most other hard disks used a dedicated positioning surface,
   432	a whole side of a hard disk platter contained no data and instead acted
   433	as a map to those that did. But not CMI's AT drives. And these drives
   434	didn't park the heads when you turned the power off. The heads just
   435	dropped down onto the data and scarped against it.
   436	
   437	IBM never really admitted doing anything wrong, but tens of thousands of
   438	users know different. If this black episode in computing history had a
   439	silver lining, it was that it taught hard disk users how absolutley
   440	imperative it is to make frequent and comprehensive backup copies of
   441	their work.
   442	
   443	In any event, a PC-AT running at 8MHz was 67 percent faster than a
   444	standard PC or PC-XT. The PC-AT hard disk was twice as fast as the
   445	speediest XT disk drive, which made everything seem a lot more
   446	energetic, and ended up turbocharging disk-intensive applications such
   447	as database searches. On top of all that, the PC-AT could deal with
   448	memory in 16-bit chunks, while the PC and PC-XT had to lumber along with
   449	half that amount. Clone makers soon started producing respectable AT
   450	imitations that chugged along even faster. To avoid falling behind the
   451	competition too much, IBM eventually had to nudge the performance upward
   452	slightly each time it refined the AT design.
   453	
   454	IBM's newest PS/2 line of hardware and many high-performance clones on
   455	the market make even the fastest AT look like its standing still. With
   456	CPU sppeds of up to 25MHz, hard disk access times in the high teens, and
   457	a 32-bit bus that moves data four times as efficiently as the one in the
   458	original PC, these hot new micros give refrigerator-sized minicomputers
   459	a good run for their money.
   460	
   461	The PC-AT was originally delivered with a 20-megabyte hard disk,
   462	although subsequent versions have enhanced both the speed and capacity
   463	of its hard disk. Still, 20Mb storage meant that backin it all up would
   464	take 56 standard 360k floppies. The mind reels. Apparently, so did
   465	IBM's. It dropped a quad-density floppy disk drive, with 1.2Mb capacity
   466	into each AT. IBM refers to these as high-capacity drives. Unhappy users
   467	have called them something else, unprintable here.
   468	
   469	The PC-AT's new DOS, version 3.0, could handle the increased floppy disk
   470	storage. But it also had to understand every other floppy format. In the
   471	space of six years IBM had introduced single-sided and double-sided
   472	drives, with eight or nine sectors, and in double or quad density, so
   473	downward compatibility meant having to deal with:
   474	
   475	         * 160k single-sided 5.25"
   476	         * 180k    "         "
   477	         * 320k double-sided "
   478	         * 360k    "         "
   479	         * 1.2M    "         "
   480	
   481	Well, there's compatibility and there's compatibility. Out of the 25
   482	different possible combinations of using the DISKCOPY command to move
   483	information from one to the other, 16 won't work.
   484	
   485	What's more, IBM's PS/2 hardware uses 3.5" diskettes, a whole new ball
   486	game. These smaller diskettes are sturdier, easier to transport, and
   487	vastly more efficient at storing information. IBM characteristically
   488	complicated matters by producing two different and slightly incompatible
   489	3.5" disk formats, one that holds 720k and one capable of storing 1.44Mb
   490	of data.  The 5.25" 320/360k format won't go away very quickly, since so
   491	many vendors have made it the standard for program distribution.  But
   492	the PC-AT's 1.2Mb drive and the low-end PS/2 720k diskette are orphans.
   493	
   494	         * note: This is US. 720k was very popular in NZ.
   495	
   496	All IBM microcomputers gave users a clock and calendar that could stamp
   497	DOS directory listings with the time and date files were created or most
   498	recently updated.  But users had to set the clock each time they started
   499	their systems, unless they had purchased an add-in board with a
   500	battery-driven clock on it (and most did).  The PC-AT came with its own
   501	internal battery run clock/calendar, but it wasn't until DOS 3.3 taht
   502	users could reset it easily.
   503	
   504	Program developers live by a rule: "The software is never finished."
   505	Each release of DOS or any commercial application is quickly followed by
   506	a version with bug fixes, sppedups, and forgotten utilities.  Market
   507	considerations force manufacturers to ship everything at the earliest
   508	possible date.  Microsoft officially admits that DOS 3.0 "wasn't quite
   509	ready" at the introduction of the PC-AT.  But it went out the door
   510	anyway.
   511	
   512	Today, virtually every desk in America has a telephone in one corner.
   513	IBM's vision of the future puts a computer terminal next to it, and
   514	strings all the terminals together electronically.  Networking computers
   515	this way has lots of advantages.  It lets users "mail" messages and
   516	files to each other, and share centralised databases of information.
   517	Networks can also let users share expensive peripherals like plotters or
   518	laser printers, but it doesn't make much sense installing three $1500
   519	network hookups to share one $1500 laser printer. Today networks are
   520	interesting to a minority of users only - although the number grows as
   521	the costs and headaches associated with using them are reduced. Networks
   522	introduce their own special set of problems.  Two users may reach for
   523	the same database records at the same time, and something has to mediate
   524	the conflict.  Worse, giving users access to centralised information
   525	means someone has to decide who gets access to what.  And then something
   526	has to keep track of the authorisation levels and enforce it all, and
   527	make sure the right data is routed to the right place.
   528	
   529	Microsoft designed DOS version 3.0 to support the official IBM PC
   530	network hardware.  Unfortunately, the AT was ready before the network
   531	features of DOS were, and the Microsoft designers had to deactivate
   532	these features in the final product.  They finally turned them back on
   533	again in version 3.1, released in November 1984.  But DOS 3.1 was picky;
   534	it would handle only certain well-behaved networks.
   535	
   536	DOS 3.0 introduced a streamlined method for integrating FCB's and
   537	handles. And while it provided a small handful of new features, none was
   538	a radical departure from DOS 2.1. In fact, IBM stated in its
   539	documentation that "DOS 3.0 does not replace DOS 2.1". But it did fix a
   540	nasty 2.1 oversight, by making it harder for users to format their hard
   541	disks if they weren't careful. (It wasn't until version 2.0 that DOS
   542	even asked for confirmation if users tried to delete all the files on
   543	their disk with a single ERASE *.* command.) Version 3.0 also let users
   544	make files read-only to prevent any inadvertent changes or deletions.
   545	
   546	Version 3.1 provided better "aliasing" features to combine drives and
   547	directories and to trick DOS into treating a subdirectory like a disk
   548	drive. DOS 3.2 introduced users to 3.5" diskettes (although the tools it
   549	provided to do this were downright awful), made it easier for them to
   550	upgrade DOS versions, and gave them one of the best but least-used new
   551	commands, XCOPY.
   552	
   553	DOS 3.3, tossed off by IBM pitchment at the introduction of the PS/2 as
   554	an "interim solution" and the operating system for a string of dogs
   555	including the PC Convertible, Portable PC, and PC-Jr, deftly excised a
   556	heap of user headaches, and added a few sizzling new tricks.
   557	
   558	As all seasoned hard disk users are aware, working efficiently on a hard
   559	disk machine means pigeonholing related programs and data in electronic
   560	file drawers called subdirectories. But users who are currently working
   561	in one subdirectory often want to execute a program or look at data
   562	stored in another.
   563	
   564	Since version 2.0, users had been able to tell the PATH command to check
   565	specified subdirectories for executable files (with filenames ending in
   566	COM, EXE or BAT). This let users run programs in other subdirectories,
   567	but it didn't let them get at distant data. Nonexecutable files remained
   568	immune to even the most comprehensive search, forcing power users to
   569	purchase commercial "path extender" programs, or struggle with the DOS
   570	3.1 SUBST command.  The DOS 3.3 APPEND command made this process
   571	relatively easy - and a lot cleaner.
   572	
   573	Serial ports are your system's main gateway to the world.  Version 3.3
   574	let MODE cruise along with four serial ports rather than two (OS/2 can
   575	use 8) and cruise along at 19200 baud, double the previous limit.  And
   576	IBM finally recognised that at least twice a year users need to reset
   577	their internal IBM clocks and provided a way of doing this without
   578	hunting down their Diagnostics disks, figure out which option adjusts
   579	the time, and grind through all the irritating preliminary screens.  The
   580	3.3 TIME and DATE commands automatically adjusted IBM CMOS memory to
   581	reflect the change.
   582	
   583	Another improvement was the newfound ability of the DOS 3.3 ATTRIB
   584	command to gang-process all files within a directory and its related
   585	subdirectories, which made it easier to create backups and prevent
   586	inadvertent file deletions or changes.  Unfortunately, the same process
   587	used by ATTRIB can also hide files from casual snooping, but IBM's
   588	manual won't show you how.
   589	
   590	The original DOS architects preferred working with 512-byte disk
   591	sectors, and used a FAT to keep track of what data was in which sector.
   592	When they designed the FAT they used 16-bit addresses, which allowed a
   593	maximum of 65,536 (64k) table entries.  This clamped a firm 32Mb limit
   594	on the size of any physical hard disk (512 x 65,536 = 33,554,432 bytes).
   595	To get around this limit, manufacturers either had to increase the
   596	sector size, which made their hardware non-standard and relatively
   597	wasteful, or come up with an entirely new file management scheme, which
   598	ended up being even more non-standard.
   599	
   600	IBM tuned DOS 3.3 to divide physical hard disks into smaller "logical"
   601	drives, and fixed the FDISK command to create extended DOS partitions in
   602	addition to the primary ones they were able to carve out previously.
   603	Each extended partition could be further subdivided into logical drives
   604	32Mb or smaller, with their own drive letters.  Compaq quickly made it
   605	even easier to use enormous hard disks, by introducing DOS 3.31 that
   606	boasted 32-bit FAT addresses.
   607	
   608	To expedite directory searches with the new generation of larger hard
   609	disks, DOS 3.3 provided a filename cache utility called FASTOPEN.
   610	Caches keep track of things in memory rather than on disk, which speeds
   611	many processes up significantly.  FASTOPEN notes the location of files
   612	and subdirectories (which are really just special classes of files) the
   613	first time you hunt for them, and then directs DOS to the exact spot on
   614	the disk the next time you have to deal with them.
   615	
   616	The DOS BACKUP command had always been so pathetic that an entire
   617	industry of third-party backup software has evolved to fill the gap.
   618	While the version 3.3 enhancements aren't going to put those developers
   619	out of business, they will bring some users back into the fold.  Under
   620	previous DOS versions you had to format a tall stack of disks before
   621	strating the backup process.  If you ran out of formatted disks halfway
   622	through you had to abort and either find a way to catch up, or start the
   623	whole elaborate, time-consuming procedure all over again.
   624	
   625	In DOS 3.3 the BACKUP command can summon the FORMAT command and prepare
   626	unformatted disks if necessary - with certain irritating restrictions.
   627	And you have to limit the disks and drives you use; it still can't mix
   628	and match.  The DOS 3.3 BACKUP works faster and more efficiently than
   629	older versions, by copying all smaller files into a single enormous one,
   630	and by creating a guide file that tells DOS how to take the big file
   631	apart and restore it properly again later.  It also creates a log file
   632	telling you what it did where.
   633	
   634	The DOS 3.3 RESTORE gives you added flexibility in restoring backed-up
   635	files by date and time, as well as those deleted or changed since you
   636	last backed up, or files that are no longer on the target disk.  Better
   637	yet, while older versions of RESTORE let you accidentally obliterate
   638	your system files (IBMBIO.COM, IBMDOS.COM and COMMAND.COM or their
   639	MS-DOS counterparts) with older backed-up versions, DOS 3.3 RESTORE
   640	won't.  Inadvertently mixing versions of hard disk system files is like
   641	replacing a heart surgeon in the middle of an operation, with a tree
   642	surgeon.
   643	
   644	Batch files can take the anguish out of tricky or repetitive tasks.  The
   645	first thing most power users do when they create a batch file is turn
   646	off the display by issuing an ECHO OFF command.  This stops DOS from
   647	littering your screen with the frantic prompts, messages, and other
   648	electronic graffiti a batch file generates.  But users had no authorised
   649	way of preventing this ECHO OFF command from adding to the screen
   650	clutter itself.  Version 3.3 users can prevent such clutter simply by
   651	prefacing any command with an @ symbol.
   652	
   653	in addition, DOS 3.3 could CALL one batch file from within another,
   654	execute it, and then return to the original batch file and continue
   655	executing it.  Doing this kind of "nesting" under previous versions of
   656	DOS meant that each batch file had to load its own separate version of
   657	COMMAND.COM to do its work, exit, and drop back to yet another version -
   658	which was sort of like restarting a movie every time a latecomer walked
   659	into the theatre.  DOS 3.3 also documented environment variables for the
   660	first time, which let users pass information back and forth from
   661	application to application.
   662	
   663	DOS 3.0 to 3.2 came in five international flavours. By executing the
   664	appropriate KEYBxx command, users could transform the keyboard into
   665	British, German, French, Italian or Spanish modes.  With version 3.3,
   666	IBM totally revamped the way DOS handled foreign alphabets.  IBM's
   667	manuals have gotten a bit better over the years, but the three abtruse
   668	and seemingly contradictory chunks on this international support
   669	virtually defy comprehension.  IBM prefaced its long appendix-like
   670	treatment of the topic with the caveat "You can use code page switching
   671	without fully understanding everything about it." After poring over the
   672	text, you'll know why this was included.  And if you live in the United
   673	States, you'll take one look, put your hand over your heart, and say,
   674	"Thank God we're Americans."
   675	
   676	For the first time, DOS 3.3 set a default number of disk buffers based
   677	on your system's configuration.  Under previous versions, it assumed
   678	evert PC and XT user really wanted only two and every AT user only
   679	three.  DOS will now sniff out what hardware you have available, and
   680	allocate from two buffers (minimal RAM, no hi-density floppies, 3.5"
   681	diskettes, or hard disks) to 15 (and machine with more than 512k of
   682	RAM).  If you're using a big hard disk, you may want more than 15.
   683	Better yet, try a commercial file cache program.
   684	
   685	The Future
   686	
   687	IBM and Microsoft continue to add and adapt messages and prompts; the
   688	infamous and ubiquitous DOS error message "Abort, Retry, Ignore?" became
   689	a more chilling "Abort, Retry, Ignore, Fail?" under DOS 3.3.  This isn't
   690	exactly friedly.  When Microsoft originally designed DOS it published
   691	all the specifications so that other manufacturers could replace the
   692	COMMAND.COM user interface with something different, such as a visual
   693	shell.  Several amateurs have tried, but nothing has come of it.
   694	Microsoft itself tried an easier interface called WINDOWS, but users
   695	have resisted, calling the interface overly large, ungainly, and slow.
   696	Microsoft and IBM have adapted Windows as a graphic front-end called
   697	Presentation Manager for OS/2.
   698	
   699	DOS needs all sorts of help; way back when the EGA was first introduced,
   700	for instance, users complained that the MODE command couldn't deal with
   701	any of the new graphics settings, such as 43 or 50 lines of text, or the
   702	far better colour selection.  Now that VGA is becoming the norm, DOS
   703	still doesn't directly handle anything better than CGA.
   704	
   705	(PC-DOS 4.0 and 4.01 have been released since this was written; MODE now
   706	supports high resolution text displays and multiple serial ports.
   707	However few users have switched to 4.0 or 4.01 in New Zealand,
   708	particularly after the OS was slammed by the foreign press as being full
   709	of bugs, inconsistent in its user interface, and a memory hog.  Some
   710	Wellington BBS users have successfully changed to DOS 4.01, and have
   711	experienced no real problems in their non-demanding environment.  Most
   712	users with only 640k will probably prefer to stick with DOS 3.2 or 3.3,
   713	and those with large disks to 3.31.)
   714	
   715	[And since *that* was written, most new computers are sold with a 40MB
   716	disk minimum and DOS 4.01. The product is now quite stable. DOS 5.0's
   717	release is imminent.]
   718	
   719	----------------------------------------------------------------------
   720	Downloaded from The Cave III, where the SysOp had uploaded it.  Don't
   721	know whether he wrote it, or found it somewhere, but it's not bad!
   722	