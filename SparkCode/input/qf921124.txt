     1	                     QFACTS (Version 921124)
     2	
     3	The central goal of Qfacts is to define a standard for
     4	representing, analyzing and retrieving information, facts, and
     5	knowledge as quickly, easily, efficiently, and tersely as
     6	possible, using simple tools.
     7	
     8	Any basic propositions that can be stored in a database,
     9	spreadsheet, or knowledgebase can be stored as one-line
    10	statements in plain text Qfacts files.
    11	
    12	A Qfacts fact/record consists of an object or head followed by
    13	any number of descriptive property/value pairs, all on one line:
    14	
    15	     obj <prop1> val1 <prop2> val2 <prop3> val3 ...
    16	
    17	     France <capital> Paris <GDP> $724.1b <year> 1986
    18	
    19	Qfacts statements are written in SGML (Standard Generalized
    20	Markup Language) style, but do not strictly follow SGML rules and
    21	conventions. Qfacts properties are roughly equivalent to SGML
    22	tags.
    23	
    24	Qfacts is an effort to define a scheme for representing
    25	well-structured information and knowledge that is maximally
    26	simple and intelligible for non-programmers. The kinds of
    27	knowledge structures that should be represented in Qfacts should
    28	usually be no longer than 1000 characters, and will as a rule be
    29	between 50 and 200 characters. More complicated and lengthy
    30	knowledge structures will burst the bounds of Qfacts' line
    31	limits. But a surprising number of factual propositions about the
    32	world can be comfortably represented within the conventions of
    33	Qfacts.
    34	
    35	A Qfacts file consists of a list of facts (or records) in Qfacts
    36	format. A Qfacts file is headed by the tag
    37	
    38	     <o>#qfacts
    39	
    40	which signals the beginning of an object of record type "qfacts."
    41	(This convention is part of another tagging scheme called
    42	Knotes--for Knowledge Notes--which is not necessary to discuss
    43	here.) The beginning of a set of Qfacts records is defined by the
    44	tag
    45	
    46	     <records>
    47	
    48	The end of a Qfacts file is defined in SGML style by the tag
    49	
    50	     </o>
    51	
    52	or by the end of the file, whichever comes first.
    53	
    54	Qfacts files are designed to be easily searched by boolean grep
    55	programs like Maxfind or KWS, merged with other plain text Qfacts
    56	files, and analyzed by knowledgebase software which understands
    57	the Qfacts format. A typical way to use Qfacts files is to store
    58	tens, or hundreds, or thousands of them under a single directory,
    59	and to retrieve records with a favorite grep program accessed
    60	through a well-tuned batch file.
    61	
    62	Qfacts statements can be easily composed on the fly with a simple
    63	text editor, and are fully self-documented and portable.
    64	
    65	Multiple values for any property can be stored as a list enclosed
    66	in parentheses and by separating each item in the value list by a
    67	semicolon:
    68	
    69	     France <major city> (Paris; Marseille; Lyon; Toulouse; Nice)
    70	
    71	Values themselves can be treated as objects or heads by storing
    72	their property/value pairs in parentheses:
    73	
    74	     France <capital> Paris (<population> 2,188,918 <year> 1982)
    75	
    76	Parentheses can be nested at any level of depth.
    77	
    78	Generally, however, the best style is to store only one
    79	property/value pair in each record.
    80	
    81	Some sample Qfacts statements:
    82	
    83	     Electronic Data Systems <sales> $4,744.6m <y> 1988 <s> Universal Almanac 1990
    84	     Exxon <Fortune 500 rank> 3 <y> 1988 <s> Universal Almanac 1990
    85	     France <capital> Paris
    86	     Huntington, Samuel <c> pro-Clinton ad signer <y> 1992 <s> New York Times 8/17/1992
    87	     Los Angeles, Calif <population> 2,969,528 <y> 1980
    88	     Massachusetts <governor> Weld, William (<political party> Republican) <y> 1992
    89	     Mean Streets <c> movie <director> Scorcese, Martin <y> 1973
    90	     Mosley, Walter <book by> A Red Death (New York: Pocket Books) <y> 1992
    91	     Perot, Ross <U.S. presidential election: percent of popular vote> 19 <d> November 4, 1992
    92	     Turner, Ted <address> CNN, One CNN Center, Atlanta, GA 30348 <y> 1992 <s> Boston Globe 11/16/1992 p22
    93	     Will, George <c> syndicated columnist
    94	     Vanity Fair <publisher> The Conde Naste Publications Inc. <y> 1992
    95	
    96	There are a number of reserved property tags and other keywords
    97	in Qfacts:
    98	
    99	     <category> = a category to which an object belongs
   100	     <c> = abbreviation for <category>
   101	     <date> = date that property/value pair(s) was true for object
   102	     <d> = abbreviation for date
   103	     <keyword> = keyword describing an object and statement
   104	     <k> = abbreviation for <keyword>
   105	     <note> = miscellaneous note
   106	     <n> = abbreviation for <note>
   107	     <quote> = quote about an object
   108	     <quote+> = positive quote about an object
   109	     <quote-> = negative quote about an object
   110	     <q> =  abbreviation for <quote>
   111	     <q+> = abbreviation for <quote+>
   112	     <q-> = abbreviation for <quote->
   113	     <source> = the source of a qfact
   114	     <s> = abbreviation for <source>
   115	     <time> = time that property/value pair(s) was true for object
   116	     <t> = abbreviation for <time>
   117	     <user> = user who composed qfact
   118	     <u> = abbreviation for <user>
   119	     <w> = write date: date qfact was composed
   120	     <year> = year that property/value pair(s) was true for object
   121	     <y> = abbreviation for <year>
   122	     !rule: = a rule directive
   123	     !abb: = an abbreviation definition
   124	
   125	There are two other special types of Qfacts statement.
   126	
   127	Rules and other commands for manipulating, analyzing, and
   128	generating inferences from Qfacts statements are expressed as
   129	special directives preceded by an exclamation point:
   130	
   131	     !rule: if x <area code for> y then y <area code> x
   132	
   133	The variables "x" and "y" always point to an object and value
   134	respectively.
   135	
   136	For the statement
   137	
   138	     617 <area code for> Boston
   139	
   140	Qfacts on command would automatically generate the statement:
   141	
   142	     Boston <area code> 617
   143	
   144	Rule directives must appear on single lines, and can be stored in
   145	the same file with other Qfacts statements.
   146	
   147	Abbreviation directives are stored in a similar way:
   148	
   149	     !abb: lang = language
   150	     !abb: hfac = House Foreign Affairs Committee
   151	
   152	A Qfacts statement with an object/head enclosed by a leading
   153	pound sign and following colon is a pointer to a record type:
   154	
   155	     #movie: <title> Amadeus <director> Forman, Milos <y> 1984
   156	     #book: <author> Vidal, Gore <title> Live from Golgatha <city> New York <publisher> Random House <year> 1992
   157	
   158	One could write the rule:
   159	
   160	     !rule: in #movie if <title> y then y <c> movie
   161	
   162	In other words, Amadeus belongs to the category "movie."
   163	
   164	The left and right angle brackets which delimit Qfacts tags can
   165	be forced into their conventional meaning by preceding them with
   166	a tilde:
   167	
   168	     ~<  ~>
   169	
   170	A Qfacts record without any property tags is perfectly legal, and
   171	is considered to be a miscellaneous unstructured note.
   172	
   173	The best style for storing source information is minimal but
   174	sufficient to track down the source:
   175	
   176	     <source> New York Times 11/24/1992 p3 //a newspaper source
   177	     <source> Steele Common Lisp 1990 p251 //a book source
   178	
   179	With today's powerful and omnipresent databases, for most folks
   180	expanding these brief source pointers to their full cites is a
   181	trivial matter. The goal behind Qfacts is to provide a mechanism
   182	for representing knowledge as easily, quickly and tersely (but
   183	intelligibly) as possible.
   184	
   185	A sample use of Qfacts files: unzip them to C:\QFDATA and search
   186	them with QF.BAT:
   187	
   188	        @echo off
   189	        kws c:\qfdata\*.* %1 %2 %3 %4 > c:\tmp\tmp.qf
   190	        list c:\tmp\tmp.qf /w
   191	
   192	This batch file assumes that QF.BAT, KWS and LIST are in your
   193	path.
   194	
   195	In the latest version of KWS the above batch statement will
   196	assume a boolean "and" between arguments.
   197	
   198	This scheme for doing simple knowledge representation in plain
   199	ASCII files is entirely arbitrary. Suggestions are welcome for
   200	improving these conventions. If enough people can agree on a
   201	standard for basic knowledge representation, useful software
   202	tools should appear in due time for processing plain
   203	knowledgebase files.
   204	
   205	Wayne McGuire
   206	Compuserve: 71330,2074
   207	Genie: w.mcguire
   208	Internet: wmcguire@world.std.com
   209	Internet: 71330.2074@compuserve.com
   210	Internet: wayne.mcguire@channel1.com
   211	Channel One (BBS): 617-354-8873
