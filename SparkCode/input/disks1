     1	
     2	
     3	
     4	
     5	        ษออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
     6	        บ                                                              บ
     7	        บ                       The Technology of                      บ
     8	        บ                     Magnetic Disk Storage                    บ
     9	        บ                                                              บ
    10	        บ                              by                              บ
    11	        บ                         Steve Gibson                         บ
    12	        บ                  GIBSON RESEARCH CORPORATION                 บ
    13	        บ                                                              บ
    14	        บ                                                              บ
    15	        บ     Portions of this text originally appeared in Steve's     บ
    16	        บ               InfoWorld Magazine TechTalk Column.            บ
    17	        บ                                                              บ
    18	        ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
    19	
    20	
    21	        The technologies used to store and retrieve data to floppy and
    22	        hard disks is intriguing, intuitive, and surprisingly simple.
    23	        This article examines the technology of disk data storage.  Soon 
    24	        you'll know exactly how and why RLL hard disk controllers are 
    25	        able to pack 50 percent more data onto your trusty old reliable 
    26	        hard disk ... and why they may NOT be giving you something for 
    27	        nothing! 
    28	
    29	        It all begins with two intimately related phenomena: magnetism
    30	        and electricity.  Just as a flow of electric current has a
    31	        direction which can be called positive or negative,  magnetism
    32	        has a direction known as north and south poles.  Recalling high
    33	        school physics, you'll remember that an electric current flowing
    34	        through a coil of wire creates a magnetic field, and conversely,
    35	        a change in a magnetic field near to a coil INDUCES a flow
    36	        of electric current.  If we add to this a metal's ability to
    37	        "remember" a magnetic field's direction by becoming magnetized,
    38	        we have everything we need for storing and retrieving
    39	        information.
    40	
    41	        The read/write head in a slow-spinning floppy disk stays in
    42	        physical contact with the disk medium at all times while the
    43	        faster rotation rate of a hard disk causes its head to
    44	        aerodynamically FLY over the disk's surface when the drive is up
    45	        to operating speed.  Since a drive's read/write head and disk
    46	        "communicate" using magnetic fields, and since magnetic fields
    47	        travel through the air readily, actual physical contact between
    48	        the head and disk is not necessary.  The disk drive's head and
    49	        disk only need to be close enough to magnetically "couple" and
    50	        influence each other as a result.
    51	
    52	        A disk's read/write head is a specially designed coil of wire
    53	        wrapped around a metal armature.  This armature has a very tiny
    54	        GAP across which the magnetic field generated by the coil JUMPS.
    55	        The gap serves to concentrate the jumping magnetic field into a
    56	        tiny spot on the disk.  As the field jumps the gap, a bit of
    57	        magnetic field protrudes from the head and passes through the
    58	        nearby disk or diskette.  When a read/write head wears out it's
    59	        because this gap has widened, becoming too large, and thus
    60	        has lowered the resolution of the head.
    61	
    62	        Writing data onto a disk takes advantage of magnetization.  An
    63	        electric current is applied to the coil in the disk head.  This
    64	        produces a magnetic field which jumps across the gap of the head
    65	        and protrudes into the disk surface.  Since disks are composed
    66	        of a metallic oxide, tiny spots of the disk become magnetized
    67	        and thus "remember" the magnetic field which was imposed.
    68	
    69	        Reading data is essentially the writing process in reverse.  The
    70	        tiny magnetic spots on the disk create their own tiny protruding
    71	        magnetic fields.  As the disk rotates, the disk head passes over
    72	        these tiny protruding fields.  When these fields fall across the
    73	        gap in the read/write head a small electric current is induced
    74	        in the head's wire coil.  A sensitive READ AMPLIFIER boosts this
    75	        signal up to useable strength for interpretation as the data
    76	        stored on the disk.
    77	
    78	        The question now is:  How do we ERASE the little magnetized
    79	        blips on our disk to allow us to CHANGE the data recorded there?
    80	        So far all we could do would be to magnetize the entire track,
    81	        which wouldn't help us either!  The answer lies in the fact that
    82	        it is a CHANGE in the magnetic field which induces a recoverable
    83	        flow of current.  (After all, if a fixed magnetic field were
    84	        able to produce a steady current flow in a surrounding wire coil,
    85	        we'd have the equivalent of perpetual motion ... or perpetual
    86	        power!)  Remember that magnetic fields are like electric current
    87	        in that they're either present or not, and they have a distinct
    88	        direction, a north or south polarity!
    89	
    90	        When we're WRITING data onto a disk we don't turn the current on
    91	        and off, we keep current flowing through our read/write head at
    92	        all times.  When we wish to write a "ONE" bit, we simply REVERSE
    93	        the POLARITY of the head's current.  This reverses the recorded
    94	        magnetic field from north to south or south to north.  We don't
    95	        care which way the field changes since ANY reversal represents a
    96	        "one" bit and no reversal represents a "zero."
    97	
    98	        Since we have an electric current of one polarity or the other
    99	        flowing through the head at all times, the constant magnetic
   100	        field produced "plows over" any old "blips" or polarity
   101	        reversals which might have been present before.  This
   102	        effectively leaves "zeros" in our wake except where we
   103	        deliberately reverse the polarity to leave a "one" bit instead.
   104	
   105	        So what are the various factors which determine the upper limits
   106	        on the number of "ones" and "zeros" a disk can hold and the finer
   107	        points of data storage encoding and density?
   108	
   109	        We've seen that "one" bits are written onto floppy and hard disks
   110	        by reversing the polarity of the current passing through the
   111	        drive's read/write head.  "Zero" bits are written simply by not
   112	        reversing that polarity.  These polarity reversals cause a
   113	        DIRECTION reverse of the magnetic field "flux" imposed by the
   114	        read/write head upon the disk.  The data storing "memory" effect
   115	        of a disk comes from the metallic nature of the disk's oxide
   116	        coating which becomes magnetized with these patterns of "flux
   117	        reversals."  During data read-back these flux reversal patterns
   118	        induce a weak current pulse in the read/write head which is
   119	        amplified by the read amplifier and used to recover the stored
   120	        data.
   121	
   122	        This data recording scheme leaves us with a major problem:
   123	        Reading back "ones" is simple since a pulse is received from the
   124	        read/write head for every flux reversal encountered, but "zeros"
   125	        are another matter entirely!  Since "zeros" are "written" by
   126	        writing nothing, we can't be certain exactly how many "zeros" were
   127	        written between the "ones!"
   128	
   129	        In theory we could measure the TIME between successive "one"
   130	        pulses and infer how long the RUN of "zeros" must have been, but
   131	        this is
   132	        too uncertain when we have unlimited run lengths.  The first
   133	        single-density floppy disk controllers used a simple data
   134	        encoding scheme to solve this problem.
   135	
   136	        A "zero" data bit was actually written as a one-zero pulse pattern
   137	        (a pulse and a pause) on the disk and a "one" was written as a
   138	        "one-one" pattern (two pulses).  In this coding scheme the first
   139	        pulse, known as the clock-bit, was always present, and the second
   140	        pulse, known as the data-bit, was the actual data to be written.
   141	
   142	        Writing five "ones" in this scheme would produce a pulse pattern
   143	        of 1111111111 on the disk while writing five "zeros" produces
   144	        1010101010.  Since the frequency of pulses for "one" data bits is
   145	        twice that for "zeros" this scheme was known as FREQUENCY
   146	        MODULATION or "FM" encoding.  In FM the minimum RUN LENGTH of no
   147	        flux reversal pulses is zero since there might be no pauses at all
   148	        between pulses and the maximum pause run length is "one" since the
   149	        interposed "clock bits" guarantee at least a one pulse every
   150	        other time.  A notational shorthand for this scheme would be
   151	        "0,1 RLL."  (getting the picture?)
   152	
   153	        This simple encoding scheme worked wonderfully.  Everyone was
   154	        happy, felt good, and smiled a lot.  However after a while,
   155	        people began to want more.  The problem with the FM modulation
   156	        scheme is that it was inefficient.  It used up lots of pulses
   157	        since a "one" data bit used two pulses and a "zero" used one.  It
   158	        required an average of one and a half pulses per data bit.
   159	
   160	        One way of increasing the density would have been to put the
   161	        pulses closer together, but they were ALREADY as close together
   162	        as they could be!  So a bright engineer came up with a clever
   163	        solution:  If we promised to always have a least ONE pause
   164	        between pulses, we could put the pulse patterns out twice as
   165	        fast!  Then two twice-as-fast pulses separated by one pause
   166	        would be no closer than two pulses right next to each other had
   167	        been before!
   168	
   169	        This coding scheme is called MFM for MODIFIED Frequency
   170	        Modulation.  A "one" bit's pulse pattern is 01, and a 0 is x0
   171	        where
   172	        x was a pause if there had just been a pulse and a pulse if
   173	        there had just been a pause.  Twiddling around with this on a
   174	        napkin you'll see that this always forces at least 1 no-pulse
   175	        pause between pulses and never allows more than 3 pauses between
   176	        pulses.  Since this MFM coding scheme doubles the data rate over
   177	        FM, it is called double-density and could also be called 1,3 RLL
   178	        since the pause run lengths are limited between 1 and 3. All
   179	        standard floppy and hard disk today use this MFM or 1,3 RLL
   180	        encoding.
   181	
   182	        Then when we began wanting even more density the way was clear.
   183	        2,7 RLL, known today simply as "RLL,", cranks the data bit rate,
   184	        and therefore the density, up 50 percent higher by guaranteeing at
   185	        least 2 (very short) pause intervals between successive pulses
   186	        and limiting the pause run length to 7.
   187	
   188	        Another way of looking at this will show you what's REALLY
   189	        HAPPENING here:  We've been cranking the data rate and data
   190	        density upwards while promising not to place successive pulses
   191	        closer together.  We've been squeezing more INFORMATION out of
   192	        the same overall NUMBER of pulses by using their EXACT POSITION
   193	        IN TIME to carry the information.
   194	
   195	        The EXACT TIMING PLACEMENT of the pulses is used to convey more
   196	        information than the pulses alone could!  This is why many hard
   197	        disk drives which work wonderfully for MFM encoded data WILL NOT
   198	        FUNCTION RELIABLY with the new 2,7 RLL controllers.  These RLL
   199	        controllers demand far more accuracy from the drive's magnetic
   200	        systems than they were ever designed to deliver.
   201	
   202	
   203	        So what about RLL controllers and MFM drives?
   204	
   205	        The thought of exchanging an existing MFM hard disk controller
   206	        for an RLL controller is quite captivating.  By placing 25 or 26
   207	        sectors on a track, RLL controlllers deliver a 50 percent storage
   208	        gain over standard MFM controllers with their 17 sectors.  Ten
   209	        megabyte drives hold 15 megs. and 20s become 30s.
   210	
   211	        Aside from sheer storage space there is another unexpected
   212	        advantage to RLL.  Imagine that your disk initially held 20
   213	        megabytes with MFM encoding.  Converting to RLL encoding now
   214	        yields 30 meg.  Notice that the original 20 megs have been
   215	        squeezed down.  Now they occupy only 2/3 of the disk.  This means
   216	        that your drive's read/write head only moves 2/3 as far as before
   217	        to reach the same data!  In effect you've SUBSTANTIALLY REDUCED
   218	        the average seek time of your drive ... for free!
   219	
   220	        This is something most people completely fail to take into
   221	        account with hard disk drives.  The time to move the read/write
   222	        head from track to track is NOT the whole story.  It's critical
   223	        to consider how much data that track-to-track move COVERS.  A
   224	        drive with more storage platters (and heads) or more sectors per
   225	        track has a greater "cylinder density."  RLL automatically
   226	        increases a drive's cylinder density.
   227	
   228	        RLL also affects the optimal interleaving factor for a drive!
   229	        Remember that MFM and RLL utilize essentially the same number of
   230	        flux reversals per inch.  However RLL utilizes infinitesimal
   231	        timing placements of the pulses to convey more information.
   232	        This means that the actual recovered data rate is 50 percent
   233	        higher.
   234	
   235	        Data flows from an RLL encoded drive at 7.5 million bits per
   236	        second, as opposed to 5 million bits per second for MFM.
   237	        Unfortunately PC and XT busses are already pushed to the limit
   238	        by the optimal sector interleave of existing MFM controllers.
   239	        Therefore RLL controllers require a LOOSER optimal interleave
   240	        than MFM controllers.  This does not mean that RLL controllers
   241	        operate slower, quite the opposite is true.  Since the PC bus is
   242	        not able to take data any faster, and since there are now 25 or
   243	        26 sectors per track, it's completely reasonable to require more
   244	        revolutions of the disk to read or write 50 percent more data.
   245	
   246	        It is much more critical to optimize the sector interleave for
   247	        RLL encoding than for MFM.  The latest RLL controller from WD is
   248	        the nicest I've seen, however using their default interleave of
   249	        3 on a standard 4.77 Mhz PC or XT requires 28 revolutions to
   250	        read an entire track!  Setting the interleave to 4 allows the
   251	        same data to be read in JUST 4 REVS!  A 700 percent performance
   252	        boost, free!
   253	
   254	        Now for the bad news:  Many people have had trouble with RLL
   255	        controllers.  This is typically caused by the hope that an RLL
   256	        controller's magic will function with any MFM-compatible drive.
   257	        We've seen why this may not be so.  It also appears that hard disk
   258	        drive manufacturers, eager to cash in on the RLL craze,
   259	        have merely been labeling the best of their MFM drives as RLL
   260	        capable, rather than re-engineering their drives for RLL
   261	        operation.  RLL is still so new that adequate drive testing
   262	        equipment is in very short supply.
   263	
   264	        Make no mistake, RLL encoding is the future.  These initial
   265	        startup growing pains will fade and RLL technology will become
   266	        the new standard.
   267	
   268	                                   - The End -
   269	
   270	
   271	                     Copyright (c) 1989 by Steven M. Gibson
   272	                             Laguna Hills, CA 92653
   273	                            **ALL RIGHTS RESERVED **
   274	