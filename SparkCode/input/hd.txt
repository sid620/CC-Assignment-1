     1	
     2	       ---------------------------------------------------------------- 
     3	 
     4	                     HARD DISKS - THE ESSENTIAL ACCESSORY 
     5	
     6	       ---------------------------------------------------------------- 
     7	
     8	       A simple observation: the first accessory any computer user 
     9	       should buy is hard drive. On a dollar for dollar basis nothing 
    10	       speeds up processing and expands convenience like a hard drive. 
    11	       The bad news? The substantial storage capacity of a hard drive 
    12	       contains the seeds of data catastrophe if you don't understand 
    13	       how to CAREFULLY maintain a hard drive. Some reference 
    14	       information pertaining to larger desktop hard drives as well as 
    15	       smaller laptop drives has been retained since drives in both 
    16	       computers are similar in function although different in form and 
    17	       size.
    18	
    19	       Many computer operations tend to slow down at the critical 
    20	       bottleneck of information transfer from computer memory (RAM) to 
    21	       disk. The faster the transfer, the faster the program operates. 
    22	       Nine times out of ten it is the bottleneck formed when 
    23	       information flows to or from a disk that you and your program 
    24	       must wait. This is where a hard drive really shines - speed. 
    25	
    26	       Given the best possible treatment, a hard drive should last from 
    27	       eight to fifteen years. Drive manufacturers typically suggest 
    28	       30,000 to 70,000 hours of routine life for a hard drive before 
    29	       failure. If you kept your PC on for a 40 hour work week for 50 
    30	       weeks - you could expect about 15 years of service for a drive 
    31	       rated at 30,000 hours. Some hard drive users even suggest 
    32	       leaving the drive on continuously or alternatively turning it on 
    33	       in the morning and off at night to minimize motor and bearing 
    34	       wear since it is the starting shock which wears most heavily on 
    35	       a drive. However, given marginal treatment or abuse, you can 
    36	       expect about fifteen minutes of service followed by a $250 
    37	       repair bill. Obviously a little information about hard drives 
    38	       and their care can't hurt. 
    39	
    40	       ---------------------------------------------------------------- 
    41	 
    42	                TECHNOLOGY 101 - BOOT CAMP FOR HARD DRIVE USERS 
    43	
    44	       ---------------------------------------------------------------- 
    45	
    46	       What is a hard drive? If you have worked with a floppy disk you 
    47	       already understand something about hard drives. Basically the 
    48	       hard drive unit is a sealed chamber (sealed against dust and 
    49	       dirt) which contains rapidly spinning single or multiple stacked 
    50	       platters. The platter(s) are similar to a floppy disk in that 
    51	       they store information magnetically - data can be erased and 
    52	       rewritten as needed. The trick is, however, that the storage 
    53	       capability is immense on a hard drive. 
    54	
    55	       A floppy typically holds about one third of a million computer 
    56	       characters (360,000 or 360K bytes). The hard drive can commonly 
    57	       hold 20 to 40 million (or more!) bytes or computer words. In 
    58	       addition, the hard drive motor spins the magnetic platter 
    59	       quickly so that information is transferred rapidly rather than 
    60	       the tedious rate of the leisurely spinning floppy. A small 
    61	       read/write head hovers and moves above the hard drive magnetic 
    62	       platter much like a phonograph needle above a record. The 
    63	       difference is that the read/write head of the hard drive rides 
    64	       slightly above the platter on a thin cushion of air. In the 
    65	       floppy drive mechanism, the read/write head is in direct contact 
    66	       with the floppy. All hard drives are installed in two parts: the 
    67	       drive (a box containing the disk and read/write head) and the 
    68	       controller (a circuit board) which may be integrated into the 
    69	       drive or a separate circuit board. The hard drive stores the 
    70	       information. The controller assumes the role of a high speed 
    71	       "translator/traffic cop" to help the hard drive move its massive 
    72	       amount of information smoothly. 
    73	
    74	       Back to the magnetic platter for a moment. The read write heads 
    75	       are mounted on a moveable arm and each position of the head 
    76	       above the platter defines a circular TRACK just like the track 
    77	       of a phonograph record. As the arm changes positions, different 
    78	       circular tracks are traced magnetically upon the surface of the 
    79	       platter. Most hard drives have several read/write heads which 
    80	       service both the top and bottom of each platter. A set of tracks 
    81	       on different platters define a vertical CYLINDER somewhat like 
    82	       the surface of a tin can whose top and bottom are missing. Large 
    83	       hard drives can have six or more platters and therefore 12 or 
    84	       more sides for information storage. The tracks can also be 
    85	       defined as divisions of equally divided data called SECTORS 
    86	       which are something like portions of the outer edge of a circle. 
    87	       Finally, the sum collection of tracks, sectors and cylinders 
    88	       define the entire VOLUME of the hard disk. 
    89	
    90	       Each piece of data has an address which tells the read/write 
    91	       heads where to move to locate that specific piece of 
    92	       information. If you tell the read/write heads to move to and 
    93	       hover over a specific track, sooner or later your data will pass 
    94	       beneath it. Since you can move the heads directly to a given 
    95	       track quickly, the early nomenclature for a hard drive was the 
    96	       DASD or DIRECT ACCESS STORAGE DEVICE. 
    97	
    98	       Movement of the read/write head arm takes a little time. For 
    99	       this reason an ACCESS TIME is associated with hard drives and 
   100	       stated in advertising and specification sheets. Generally this 
   101	       time is stated as the AVERAGE ACCESS TIME and is frequently in 
   102	       the thousandths of seconds or millisecond range which is fast 
   103	       indeed. The old IBM XT class machines featured access times 
   104	       around 85 milliseconds with the AT class machines featuring 
   105	       access times around 40 seconds. Newer hard drives post times in 
   106	       the 28 to 15 millisecond access range. Remember, the faster you 
   107	       can move the read/write heads, the faster you can get to your 
   108	       data. 
   109	
   110	       The AVERAGE WAIT TIME is a less frequently discussed number but 
   111	       equally interesting. Once the read/write head is positioned over 
   112	       the track holding your data, the system must wait for the 
   113	       correct sector to pass beneath. Obviously, the average wait time 
   114	       is one half the time it takes for a full rotation of the 
   115	       platter. This figure is rarely given in advertisements and is 
   116	       usually comparable for most drives of the same type and is 
   117	       generally much shorter than the access time. Speed matters to a 
   118	       hard drive! Average wait time is published if you dig it out of 
   119	       the specification sheet or write to the manufacturer. 
   120	
   121	       An extension of this logic brings us to consider the INTERLEAVE 
   122	       FACTOR for a disk. Generally a hard drive reads and writes 
   123	       information in sectors of the same, repeatable size such as 512 
   124	       bytes. However programs and data files are usually much bigger 
   125	       than this and obviously must be scattered onto many sectors. The 
   126	       problem is that the disk rotation is much too fast for a large 
   127	       file to be written in perfectly contiguous sectors on the same 
   128	       track. If you tried to write the data onto a track, one byte 
   129	       after the next, the central processing unit chip or CPU could 
   130	       not absorb the data fast enough.  
   131	
   132	       The solution is to place sectors to be read in ALTERNATING 
   133	       fashion which gives the CPU time to digest the data. Thus if a 
   134	       circular track on the platter had 8 sectors you might number and 
   135	       read them in this order: 1,5,2,6,3,7,4,8. This way the CPU has a 
   136	       "breather" in between each sector read. The number of rotations 
   137	       it takes the heads to read ALL tracks in succession is the 
   138	       INTERLEAVE FACTOR. Slow CPU chips can force a disk to use an 
   139	       interleave factor of 3 or even 4. A faster processor might be 
   140	       able to handle a disk interleave of 1:2 (such as 80286 processor 
   141	       chips) or even 1:1 (such as 80386 processor chips.) It is 
   142	       possible to low level format a disk and change its interleave 
   143	       factor; but if the CPU cannot keep up, the adjustment is 
   144	       worthless. To the processor operating in millionths of a second, 
   145	       the time drain of waiting for a hard drive which operates in 
   146	       thousandths of a second or floppy drive which operates in tenths 
   147	       and full seconds is wasted time. The obvious point of logic is 
   148	       that when using a hard drive you need to organize files for 
   149	       minimum time delays for the processor. 
   150	
   151	       The first outer track on a disk is always the boot record which 
   152	       loads the main portions of DOS into the machine. Following this 
   153	       is the file allocation table or FAT which we discussed in 
   154	       earlier tutorials. The FAT maintains data in CLUSTERS which, for 
   155	       an XT class machine are 4096 bytes. On the AT class machine the 
   156	       cluster size is 2048 bytes which is much more efficient and less 
   157	       wasteful of disk space. Following the FAT are the sectors for 
   158	       the root directory of the hard drive. Each directory entry is 32 
   159	       bytes in length. Curiously, and to our good advantage, unused 
   160	       entries in the directory have a unique first character byte. 
   161	       When a file is deleted though DOS, ONLY the first character is 
   162	       reset. 
   163	
   164	       Fortunately this allows various utility programs to attempt to 
   165	       recover the deleted file since ONLY the directory data is 
   166	       altered but NOT the file itself. However, as time goes on and 
   167	       additional files are added to the disk, the original file is 
   168	       overwritten by new information. This is why you need to act 
   169	       immediately if you discover you have accidentally deleted a 
   170	       file. An advantage to the use of the FAT is that files do not 
   171	       have to be given a fixed amount of space on a disk - they can 
   172	       use as many or few clusters as needed. The downside is that the 
   173	       file pieces can be scattered wildly over the surface of the disk 
   174	       in a non contiguous fashion which only the FAT can track. This 
   175	       means more read/write head motion and more wasted time as far as 
   176	       the CPU and the performance of your program is concerned. 
   177	
   178	       Additionally, if you have many deleted files within the 
   179	       directory, DOS must search tediously through each one from top 
   180	       to bottom of the directory to find a match for the file you are 
   181	       trying to locate. Obviously, then, programs and data of high use 
   182	       should have their directory entries located near the top of the 
   183	       directory to speed the search. Each time the read/write head 
   184	       moves takes time: searching the directory and finding the pieces 
   185	       of the scattered file all take movement of the read/write arm. 
   186	       There are several ways to unfragment files which boost disk 
   187	       performance, and we'll talk about those techniques it a bit. 
   188	
   189	       ---------------------------------------------------------------- 
   190	 
   191	               HARD DISKS - STRATEGIES FOR TURBOCHARGED RESULTS 
   192	
   193	       ---------------------------------------------------------------- 
   194	
   195	       Before we examine methods for improving hard drive performance, 
   196	       several simple "care and feeding" precautions should be 
   197	       mentioned. 
   198	
   199	       Hard drives are touchy if mistreated! Once brought up to speed, 
   200	       a hard drive should never be bumped or moved. The read/write 
   201	       head (similar to the phonograph needle resting on a record) will 
   202	       smash or chip into the surface of the spinning hard drive 
   203	       platter and take your data with it. Either the head or the 
   204	       magnetically coated platter can be permanently damaged. Allow 
   205	       the hard drive to some to a complete stop before moving the 
   206	       computer. 
   207	       
   208	       In addition always use a "parking" software package to move the 
   209	       read/write head to the safety zone before turning off the 
   210	       computer. A parking program usually accompanies most computers 
   211	       which have hard drives installed or can be obtained from 
   212	       commercial or shareware sources. A few drives automatically park 
   213	       the heads when turned off but this tends to be a rare feature 
   214	       seen mostly on high priced hard drives. 
   215	
   216	       Always maintain copies of data and programs outside the hard 
   217	       drive by "backing up" onto a floppy or tape. How often should 
   218	       you back up your files? Daily if you use the computer to produce 
   219	       many changes to important documents. Weekly backup is probably a 
   220	       bare minimum considered reasonable for occasional computer 
   221	       users. Other computer users maintain vital data on floppies or 
   222	       other backup systems and use the hard drive to store programs or 
   223	       applications only such as a spreadsheet or database. Backups are 
   224	       a good idea even for floppy disk systems which have no hard 
   225	       drive. 
   226	       
   227	       Make two copies of every file regardless of whether you have a 
   228	       hard drive or not. Some shareware and commercial utilities ease 
   229	       the backup chore by only copying those files to a floppy which 
   230	       have been changed or updated since the last backup has been 
   231	       performed. They ignore files which have not changed and thus do 
   232	       not require copying again. This can save a lot of time when 
   233	       backing up valuable files from your hard drive to a floppy for 
   234	       safekeeping. 
   235	              
   236	       Hard drives should periodically be reorganized (files 
   237	       unfragmented) to ensure speedy retrieval and access to data. 
   238	       Inexpensive or free software programs known as "disk file 
   239	       unfragmenters" do this job nicely. As disk files are created and 
   240	       deleted, blank spaces and unused sectors begin to build up. 
   241	       
   242	       Gradually files are broken into pieces and scattered over the 
   243	       many tracks and sectors of the disk. This happens to both 
   244	       floppies and hard drives, but is especially annoying on hard 
   245	       drives because of the dramatic increase in time it takes to load 
   246	       a program or data file. The File allocation table is the 
   247	       culprit, sense all data is packed away in the first and handiest 
   248	       sector on the drive which the FAT can find. 
   249	
   250	       The FAT allows files to be fragmented down to the cluster level. 
   251	       One way to unfragment a disk is to copy all of the files off to 
   252	       floppies and then recopy them back to the hard drive - a tedious 
   253	       nuisance at best. You would do this with the DOS XCOPY or COPY 
   254	       commands but not DISKCOPY since this would retain the tracks and 
   255	       their fragmentation as you first found them. 
   256	       
   257	       Defragmenting programs perform this task without requiring 
   258	       removal of the files from the hard drive. They perform their 
   259	       magic by moving around the clusters of a scattered file in such 
   260	       a way as to reassemble it into contiguous pieces again. Some 
   261	       customization is permitted with the more sophisticated 
   262	       "defragmenting" programs. For example, subdirectory files can be 
   263	       relocated after the root or below a different subdirectory or, 
   264	       in another example, high use files might be placed higher in the 
   265	       directory listing for faster disk access. 
   266	       
   267	       The first time a defragmenting program is run may require 
   268	       several hours if a hard drive is large and badly fractured with 
   269	       scattered files and clusters. It is a good idea to backup all 
   270	       essential files prior to "defragging" just in case there is a 
   271	       power failure during a long "defrag". Subsequent runs of the 
   272	       "defragger" produce runs of only a few minutes or so since the 
   273	       heavy work was done earlier. Essentially, "defragging" the hard 
   274	       drive should be done regularaly, perhaps weekly. Defragging is 
   275	       not a substitute for caching, ramdisks, or buffer - instead it 
   276	       is a maintenance function which should be done regularly. 
   277	
   278	       Yet another possible avenue to improve disk performance is that 
   279	       of changing the disk interleave factor which we will discuss a 
   280	       bit later in this tutorial. By way of brief introduction: the 
   281	       disk interleave indicates how many revolutions of the magnetic 
   282	       platter are required to read all the sectors of data from the 
   283	       spinning track. A ratio of 1:1 means all data can be read 
   284	       sequentially. One sector of data after another. 
   285	
   286	       There is some overhead time required for the read/write head to 
   287	       zip to the FAT area of the disk (if it is not in a cache or 
   288	       buffer) to determine location of the next sector along the disk 
   289	       track. 
   290	       
   291	       For example, five clusters of data on a track might require four 
   292	       trips back to the FAT track to find the cluster addresses even 
   293	       on a completely defragmented disk. We will talk more about 
   294	       cluster and defragmenting a bit later in this tutorial. 
   295	       
   296	       Nevertheless, depending on the speed of your central processor 
   297	       or CPU, using a program which tests and alters the interleave 
   298	       factor, IF THIS CAN BE DONE, may yield better performance. Most 
   299	       interleave adjustment software first performs a test to 
   300	       determine the current interleave, the possible changes and of 
   301	       course how much performance time might be gained. A few of these 
   302	       packages can alter the interleave with the files in place but 
   303	       you should backup truly essential files before starting the 
   304	       process. Interleave factor adjustment are mainly derived from 
   305	       the CPU speed NOT the disk speed. Thus a fast AT or 80386 
   306	       equipped machine will more likely be able to take advantage of 
   307	       an interleave adjustment. 
   308	
   309	       Tinkering with a hard drive for optimum results might best be 
   310	       divided into two categories: DISK SUBSTITUTION and DISK 
   311	       ALTERATION. DOS allows two clever ways substituting RAM memory 
   312	       for disk memory. 
   313	
   314	       In the first, using BUFFERS, the small CONFIG.SYS file on your 
   315	       hard drive is modified to contain a buffers statement. A sample 
   316	       might be: BUFFERS=20. A DOS buffer is an area of RAM memory 
   317	       capable of holding a 512 byte mirror image of a disk sector. 
   318	       This allows DOS to quickly search the buffer area for frequently 
   319	       used data instead of the slower disk. In the older XT class 
   320	       machine, if you did not specify a buffer size, DOS defaulted to 
   321	       2 buffers while later versions of DOS default to about 10 
   322	       buffers. Most users settle on about 20 buffers but you can 
   323	       specify up to 99 with current releases of DOS. But you don't get 
   324	       something for nothing. If you used the full 99 buffers 
   325	       available, you would soak up 45K of your main RAM memory! The 
   326	       downside of using buffers is that more is not necessarily 
   327	       better. 
   328	
   329	       Unfortunately, DOS searches the buffer area of RAM sequentially 
   330	       rather than logically so if DOS requires data which is in the 
   331	       buffer area, it will search each 512 byte area in sequence from 
   332	       top to bottom even though the data it needs may be at the end of 
   333	       the buffer. Logically, then, there is an optimum number of 
   334	       buffers - too many used with a small program and you can slow 
   335	       things down, not enough and DOS will be forced to go out to the 
   336	       disk to retrieve what it needs. If you rarely use the same data 
   337	       within a program twice but load lots of different programs and 
   338	       data, a large number of buffers won't help. However if you need 
   339	       frequent access to a certain data file or portion of that file, 
   340	       buffers will help. Portions of the FAT are kept within the 
   341	       buffers area, so dropping your buffers to zero has the damaging 
   342	       effect that DOS must always go to the disk to read the FAT which 
   343	       isn't helpful either. 
   344	
   345	       Another  way of substituting RAM memory for disk memory involves 
   346	       using a RAMDISK. The idea is to create in RAM memory an entire 
   347	       disk or a small portion of a disk. This works like magic on many 
   348	       machines since the reading of tracks and sectors takes place at 
   349	       the high speed of RAM memory rather than the mechanically 
   350	       limited speed of the read/write heads on a floppy or hard drive. 
   351	
   352	       But be careful. Three areas of difficulty can arise. First you 
   353	       must remember to take the data from a floppy or hard drive and 
   354	       move it into the RAMDISK. Many people do this automatically from 
   355	       within an AUTOEXEC.BAT file or may have several floppies, each 
   356	       with a different RAMDISK configuration depending on the task at 
   357	       hand. Copying data to the RAMDISK usually moves along briskly. 
   358	       Secondly you must sacrifice a large area of memory for the 
   359	       RAMDISK which can no longer be used by your main program. Users 
   360	       of computers with extended or expanded memory usually choose to 
   361	       put their RAMDISK in the extended or expanded memory area of RAM 
   362	       so that precious main memory is not lost. Still, a small RAMDISK 
   363	       can soak up 64K of RAM memory and one or two MEG RAMDISKS area 
   364	       common for many users. The third and most serious problem when 
   365	       using RAMDISKS is that they are volatile - switch off the 
   366	       machine or experience a power failure, and your data is lost 
   367	       forever! Rather than residing safely on a magnetic disk, the 
   368	       data is "floating" in RAM memory and should be - MUST BE! - 
   369	       written to a disk before the machine is powered down. 
   370	
   371	       Many applications fly with a RAMDISK. Users of word processors 
   372	       find that moving the spelling checker and thesaurus to the 
   373	       RAMDISK speeds up things considerably since these are used 
   374	       heavily in a random manner. Spreadsheet users find that reading 
   375	       and writing short data files to RAMDISKS is a boon. Programs 
   376	       which use overlay files or temporary files as well as 
   377	       programming compilers benefit from RAMDISK use. Batch files 
   378	       which are disk intensive as well as small utilities really 
   379	       sprint when placed on a RAMDISK. Basically, any program file 
   380	       which is frequently used and loaded/unloaded repeatedly to a 
   381	       disk during normal computer operation is an excellent candidate 
   382	       for RAMDISK placement. DOS contains a RAMDISK which is called by 
   383	       using the statement DEVICE=VDISK.SYS or DEVICE=RAMDRIVE.SYS (if 
   384	       you are using MSDOS) which is placed in your CONFIG.SYS file. 
   385	       Your DOS manual details the specifics such as stating the size 
   386	       of RAMDISK and giving it a drive letter. You must still copy 
   387	       your target files into the RAMDISK and place it in the search 
   388	       path (with the PATH=  command) as we mentioned in a previous 
   389	       tutorial. And the RAMDISK should always be the first drive 
   390	       letter mentioned in the path command so that DOS searches it 
   391	       first for optimum results. 
   392	
   393	       Yet another area of investigation is that of CACHE software. 
   394	       Essentially a CACHE is an extension of the buffers idea we 
   395	       discussed earlier. But the twist is that the CACHE is searched 
   396	       intelligently by a searching algorithm within the CACHE software 
   397	       rather than from top to bottom as with the more typical DOS 
   398	       buffer search system. Disk CACHE software can be obtained as 
   399	       either commercial software or shareware. As with a RAMDISK, the 
   400	       CACHE requires a chunk of RAM memory to operate. This can be 
   401	       extended memory, expanded memory or main RAM memory. Some 
   402	       manufacturers include a CACHE program with the software package 
   403	       or DOS disk. A CACHE is a sophisticated type of RAMDISK, in a 
   404	       rough sense. 
   405	
   406	       CACHE software allocates a large area of memory for storage of 
   407	       frequently used disk data. This data is updated by an 
   408	       intelligent CACHE search algorithm in an attempt to "guess" 
   409	       which tracks of a disk you might read or need next. The CACHE 
   410	       also stores the most frequently used disk data and attempts to 
   411	       remove less frequently used data. Whenever DOS requests disk 
   412	       data, the CACHE software first tries to fill the order from data 
   413	       currently stashed in the CACHE which prevents a slower disk 
   414	       search. 
   415	       
   416	       When data is written from the program to the CACHE, first a disk 
   417	       write is done to prevent data loss in case of power failure and 
   418	       then the data is stashed in the CACHE in case it is needed 
   419	       again. Usually the hard drive data is the target of the CACHE 
   420	       activity, but a floppy disk could also be cached. All CACHE 
   421	       software allows you to allocate the size of the CACHE as well as 
   422	       the drive or drives to be cached. And some even allow you to 
   423	       specify exact files or data to be cached. The key is that high 
   424	       use data lives in RAM memory which keeps tedious disk access 
   425	       times low. In general, if your computer has a megabyte or more 
   426	       of memory and a speedy processor such as an 80286 or 80386 
   427	       either or both a CACHE or RAMDISK option does improve 
   428	       performance. 
   429	
   430	       As we leave hard disk boot camp, let's finally look at hard 
   431	       drive formatting processes. Two basic formatting operations are 
   432	       of concern: physical formatting or low level formatting and 
   433	       logical or high level formatting. When you use the format 
   434	       program on a floppy disk both low level and high level 
   435	       formatting is accomplished. On a hard disk, formatting performs 
   436	       only logical or high level formatting. On a hard disk, low level 
   437	       formatting is usually done to a disk before shipment. As an 
   438	       aside, the FDISK command of DOS has little to do with either 
   439	       type of formatting, but is a method of partitioning or arranging 
   440	       the data onto the hard drive tracks. Each disk platter is 
   441	       separated into circular concentric tracks where data is stored 
   442	       as we saw earlier. During physical formatting the tracks are 
   443	       divided into further subdivisions called clusters and further 
   444	       yet into sectors. High level formatting involves the specific 
   445	       ordering of the space for the exclusive use of DOS and is a bit 
   446	       more analogous to the formatting of a floppy disk. 
   447	
   448	       Some software programs of use by hard drive owners: 
   449	
   450	       The following two programs perform low level formatting and 
   451	       simple diagnostic routines on a hard drive: 
   452	
   453	       Disk Manager and CheckIt 
   454	
   455	       Data recovery and "unerasing" programs also containing 
   456	       diagnostic routines are: 
   457	
   458	       PC Tools Deluxe, Norton Utilities, Mace Utilities 
   459	
   460	       Extensive diagnostic and maintenance/data repair functions as 
   461	       well as interleave alteration and head parking are offered by: 
   462	
   463	       SpinRite II, Optune, Disk Technician 
   464	
   465	       Shareware programs with unerase functions include: 
   466	
   467	       Bakers Dozen 
   468	
   469	       Shareware programs with defragmentation capabilities include: 
   470	
   471	       SST and PACKDISK. 
   472	
   473	       Tutorial finished. Be sure to order your FOUR BONUS DISKS which 
   474	       expand this software package with vital tools, updates and 
   475	       additional tutorial material for laptop users! Send $20.00 to 
   476	       Seattle Scientific Photography, Department LAP, PO Box 1506, 
   477	       Mercer Island, WA 98040. Bonus disks shipped promptly! Some 
   478	       portions of this software package use sections from the larger 
   479	       PC-Learn tutorial system which you will also receive with your 
   480	       order. Modifications, custom program versions, site and LAN 
   481	       licenses of this package for business or corporate use are 
   482	       possible, contact the author. This software is shareware - an 
   483	       honor system which means TRY BEFORE YOU BUY. Press escape key to 
   484	       return to menu. 
   485	       
   486	
